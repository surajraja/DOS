//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace ContactMaster.EnterpriseService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="USLIContactAsignment", Namespace="http://schemas.datacontract.org/2004/07/USLI.WCF.Services")]
    public partial class USLIContactAsignment : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int Entity1IDField;
        
        private string Entity1NameField;
        
        private int Entity2IDField;
        
        private string Entity2NameField;
        
        private int UserIDField;
        
        private string UserNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Entity1ID {
            get {
                return this.Entity1IDField;
            }
            set {
                if ((this.Entity1IDField.Equals(value) != true)) {
                    this.Entity1IDField = value;
                    this.RaisePropertyChanged("Entity1ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Entity1Name {
            get {
                return this.Entity1NameField;
            }
            set {
                if ((object.ReferenceEquals(this.Entity1NameField, value) != true)) {
                    this.Entity1NameField = value;
                    this.RaisePropertyChanged("Entity1Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Entity2ID {
            get {
                return this.Entity2IDField;
            }
            set {
                if ((this.Entity2IDField.Equals(value) != true)) {
                    this.Entity2IDField = value;
                    this.RaisePropertyChanged("Entity2ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Entity2Name {
            get {
                return this.Entity2NameField;
            }
            set {
                if ((object.ReferenceEquals(this.Entity2NameField, value) != true)) {
                    this.Entity2NameField = value;
                    this.RaisePropertyChanged("Entity2Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="USLICertification", Namespace="http://schemas.datacontract.org/2004/07/USLI.WCF.Services", IsReference=true)]
    public partial class USLICertification : ContactMaster.EnterpriseService.EntityObject {
        
        private int CertIDField;
        
        private string CertNameField;
        
        private System.Nullable<bool> isCheckedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CertID {
            get {
                return this.CertIDField;
            }
            set {
                if ((this.CertIDField.Equals(value) != true)) {
                    this.CertIDField = value;
                    this.RaisePropertyChanged("CertID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CertName {
            get {
                return this.CertNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CertNameField, value) != true)) {
                    this.CertNameField = value;
                    this.RaisePropertyChanged("CertName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> isChecked {
            get {
                return this.isCheckedField;
            }
            set {
                if ((this.isCheckedField.Equals(value) != true)) {
                    this.isCheckedField = value;
                    this.RaisePropertyChanged("isChecked");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StructuralObject", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses", IsReference=true)]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ContactMaster.EnterpriseService.EntityObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ContactMaster.EnterpriseService.USLITeam))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ContactMaster.EnterpriseService.USLITitle))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ContactMaster.EnterpriseService.USLIUser))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ContactMaster.EnterpriseService.USLICertification))]
    public partial class StructuralObject : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityObject", Namespace="http://schemas.datacontract.org/2004/07/System.Data.Objects.DataClasses", IsReference=true)]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ContactMaster.EnterpriseService.USLITeam))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ContactMaster.EnterpriseService.USLITitle))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ContactMaster.EnterpriseService.USLIUser))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ContactMaster.EnterpriseService.USLICertification))]
    public partial class EntityObject : ContactMaster.EnterpriseService.StructuralObject {
        
        private ContactMaster.EnterpriseService.EntityKey EntityKeyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ContactMaster.EnterpriseService.EntityKey EntityKey {
            get {
                return this.EntityKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityKeyField, value) != true)) {
                    this.EntityKeyField = value;
                    this.RaisePropertyChanged("EntityKey");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="USLITeam", Namespace="http://schemas.datacontract.org/2004/07/USLI.WCF.Services", IsReference=true)]
    public partial class USLITeam : ContactMaster.EnterpriseService.EntityObject {
        
        private int TeamIDField;
        
        private string TeamNameField;
        
        private string TeamStateField;
        
        private System.Nullable<bool> isCheckedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TeamID {
            get {
                return this.TeamIDField;
            }
            set {
                if ((this.TeamIDField.Equals(value) != true)) {
                    this.TeamIDField = value;
                    this.RaisePropertyChanged("TeamID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TeamName {
            get {
                return this.TeamNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TeamNameField, value) != true)) {
                    this.TeamNameField = value;
                    this.RaisePropertyChanged("TeamName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TeamState {
            get {
                return this.TeamStateField;
            }
            set {
                if ((object.ReferenceEquals(this.TeamStateField, value) != true)) {
                    this.TeamStateField = value;
                    this.RaisePropertyChanged("TeamState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> isChecked {
            get {
                return this.isCheckedField;
            }
            set {
                if ((this.isCheckedField.Equals(value) != true)) {
                    this.isCheckedField = value;
                    this.RaisePropertyChanged("isChecked");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="USLITitle", Namespace="http://schemas.datacontract.org/2004/07/USLI.WCF.Services", IsReference=true)]
    public partial class USLITitle : ContactMaster.EnterpriseService.EntityObject {
        
        private int TitleIDField;
        
        private string TitleNameField;
        
        private System.Nullable<bool> isCheckedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TitleID {
            get {
                return this.TitleIDField;
            }
            set {
                if ((this.TitleIDField.Equals(value) != true)) {
                    this.TitleIDField = value;
                    this.RaisePropertyChanged("TitleID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TitleName {
            get {
                return this.TitleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleNameField, value) != true)) {
                    this.TitleNameField = value;
                    this.RaisePropertyChanged("TitleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> isChecked {
            get {
                return this.isCheckedField;
            }
            set {
                if ((this.isCheckedField.Equals(value) != true)) {
                    this.isCheckedField = value;
                    this.RaisePropertyChanged("isChecked");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="USLIUser", Namespace="http://schemas.datacontract.org/2004/07/USLI.WCF.Services", IsReference=true)]
    public partial class USLIUser : ContactMaster.EnterpriseService.EntityObject {
        
        private string CertificationField;
        
        private string DepartmentField;
        
        private string EmailField;
        
        private string FirstNameField;
        
        private string LastNameField;
        
        private double LocationXField;
        
        private double LocationYField;
        
        private string PhoneExtensionField;
        
        private string PhoneNumberField;
        
        private string SchoolField;
        
        private string StartDateField;
        
        private string TitleField;
        
        private int UserFloorField;
        
        private int UserIDField;
        
        private string UserImageField;
        
        private string UserNameField;
        
        private string UserUrlField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Certification {
            get {
                return this.CertificationField;
            }
            set {
                if ((object.ReferenceEquals(this.CertificationField, value) != true)) {
                    this.CertificationField = value;
                    this.RaisePropertyChanged("Certification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Department {
            get {
                return this.DepartmentField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentField, value) != true)) {
                    this.DepartmentField = value;
                    this.RaisePropertyChanged("Department");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double LocationX {
            get {
                return this.LocationXField;
            }
            set {
                if ((this.LocationXField.Equals(value) != true)) {
                    this.LocationXField = value;
                    this.RaisePropertyChanged("LocationX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double LocationY {
            get {
                return this.LocationYField;
            }
            set {
                if ((this.LocationYField.Equals(value) != true)) {
                    this.LocationYField = value;
                    this.RaisePropertyChanged("LocationY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneExtension {
            get {
                return this.PhoneExtensionField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneExtensionField, value) != true)) {
                    this.PhoneExtensionField = value;
                    this.RaisePropertyChanged("PhoneExtension");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string School {
            get {
                return this.SchoolField;
            }
            set {
                if ((object.ReferenceEquals(this.SchoolField, value) != true)) {
                    this.SchoolField = value;
                    this.RaisePropertyChanged("School");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((object.ReferenceEquals(this.StartDateField, value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserFloor {
            get {
                return this.UserFloorField;
            }
            set {
                if ((this.UserFloorField.Equals(value) != true)) {
                    this.UserFloorField = value;
                    this.RaisePropertyChanged("UserFloor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserImage {
            get {
                return this.UserImageField;
            }
            set {
                if ((object.ReferenceEquals(this.UserImageField, value) != true)) {
                    this.UserImageField = value;
                    this.RaisePropertyChanged("UserImage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserUrl {
            get {
                return this.UserUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UserUrlField, value) != true)) {
                    this.UserUrlField = value;
                    this.RaisePropertyChanged("UserUrl");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityKey", Namespace="http://schemas.datacontract.org/2004/07/System.Data", IsReference=true)]
    public partial class EntityKey : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string EntityContainerNameField;
        
        private System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.EntityKeyMember> EntityKeyValuesField;
        
        private string EntitySetNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntityContainerName {
            get {
                return this.EntityContainerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityContainerNameField, value) != true)) {
                    this.EntityContainerNameField = value;
                    this.RaisePropertyChanged("EntityContainerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.EntityKeyMember> EntityKeyValues {
            get {
                return this.EntityKeyValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityKeyValuesField, value) != true)) {
                    this.EntityKeyValuesField = value;
                    this.RaisePropertyChanged("EntityKeyValues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntitySetName {
            get {
                return this.EntitySetNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EntitySetNameField, value) != true)) {
                    this.EntitySetNameField = value;
                    this.RaisePropertyChanged("EntitySetName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityKeyMember", Namespace="http://schemas.datacontract.org/2004/07/System.Data")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ContactMaster.EnterpriseService.EntityObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ContactMaster.EnterpriseService.StructuralObject))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIContactAsignment>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ContactMaster.EnterpriseService.USLIContactAsignment))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLICertification>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ContactMaster.EnterpriseService.USLICertification))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.GenericEntity>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ContactMaster.EnterpriseService.GenericEntity))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.Conferenceroom>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ContactMaster.EnterpriseService.Conferenceroom))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIEducation>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ContactMaster.EnterpriseService.USLIEducation))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ContactMaster.EnterpriseService.USLIUserAddition))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLITeam>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ContactMaster.EnterpriseService.USLITeam))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLITitle>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ContactMaster.EnterpriseService.USLITitle))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USState>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ContactMaster.EnterpriseService.USState))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIUser>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ContactMaster.EnterpriseService.USLIUser))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.User50>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ContactMaster.EnterpriseService.User50))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ContactMaster.EnterpriseService.Customer50ViewModel))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIUsers>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ContactMaster.EnterpriseService.USLIUsers))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIContactType>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ContactMaster.EnterpriseService.USLIContactType))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ContactMaster.EnterpriseService.USLIContactView))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ContactMaster.EnterpriseService.USLIContactIDs))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ContactMaster.EnterpriseService.USLIContactMainPikerView))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ContactMaster.EnterpriseService.USLIContactAsignmentDetailView))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIContactAsignmentDetail>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ContactMaster.EnterpriseService.USLIContactAsignmentDetail))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<string>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(ContactMaster.EnterpriseService.EntityKey))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.EntityKeyMember>))]
    public partial class EntityKeyMember : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string KeyField;
        
        private object ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenericEntity", Namespace="http://schemas.datacontract.org/2004/07/USLI.WCF.Services")]
    public partial class GenericEntity : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int EntityIDField;
        
        private string EntityNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EntityID {
            get {
                return this.EntityIDField;
            }
            set {
                if ((this.EntityIDField.Equals(value) != true)) {
                    this.EntityIDField = value;
                    this.RaisePropertyChanged("EntityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntityName {
            get {
                return this.EntityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityNameField, value) != true)) {
                    this.EntityNameField = value;
                    this.RaisePropertyChanged("EntityName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Conferenceroom", Namespace="http://schemas.datacontract.org/2004/07/USLI.WCF.Services")]
    public partial class Conferenceroom : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int FloorField;
        
        private string NameField;
        
        private string PhoneField;
        
        private double xField;
        
        private double yField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Floor {
            get {
                return this.FloorField;
            }
            set {
                if ((this.FloorField.Equals(value) != true)) {
                    this.FloorField = value;
                    this.RaisePropertyChanged("Floor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double x {
            get {
                return this.xField;
            }
            set {
                if ((this.xField.Equals(value) != true)) {
                    this.xField = value;
                    this.RaisePropertyChanged("x");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double y {
            get {
                return this.yField;
            }
            set {
                if ((this.yField.Equals(value) != true)) {
                    this.yField = value;
                    this.RaisePropertyChanged("y");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="USLIEducation", Namespace="http://schemas.datacontract.org/2004/07/USLI.WCF.Services")]
    public partial class USLIEducation : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int EducationIDField;
        
        private string EducationNameField;
        
        private int EducationTypeIDField;
        
        private string EducationTypeNameField;
        
        private bool isCheckedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EducationID {
            get {
                return this.EducationIDField;
            }
            set {
                if ((this.EducationIDField.Equals(value) != true)) {
                    this.EducationIDField = value;
                    this.RaisePropertyChanged("EducationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EducationName {
            get {
                return this.EducationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EducationNameField, value) != true)) {
                    this.EducationNameField = value;
                    this.RaisePropertyChanged("EducationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EducationTypeID {
            get {
                return this.EducationTypeIDField;
            }
            set {
                if ((this.EducationTypeIDField.Equals(value) != true)) {
                    this.EducationTypeIDField = value;
                    this.RaisePropertyChanged("EducationTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EducationTypeName {
            get {
                return this.EducationTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EducationTypeNameField, value) != true)) {
                    this.EducationTypeNameField = value;
                    this.RaisePropertyChanged("EducationTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isChecked {
            get {
                return this.isCheckedField;
            }
            set {
                if ((this.isCheckedField.Equals(value) != true)) {
                    this.isCheckedField = value;
                    this.RaisePropertyChanged("isChecked");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="USLIUserAddition", Namespace="http://schemas.datacontract.org/2004/07/USLI.WCF.Services")]
    public partial class USLIUserAddition : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int FloorField;
        
        private System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLICertification> UserCertsField;
        
        private System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIEducation> UserEducationField;
        
        private System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLITeam> UserTeamsField;
        
        private System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLITitle> UserTitlesField;
        
        private string UserUrlField;
        
        private int WorkStationField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Floor {
            get {
                return this.FloorField;
            }
            set {
                if ((this.FloorField.Equals(value) != true)) {
                    this.FloorField = value;
                    this.RaisePropertyChanged("Floor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLICertification> UserCerts {
            get {
                return this.UserCertsField;
            }
            set {
                if ((object.ReferenceEquals(this.UserCertsField, value) != true)) {
                    this.UserCertsField = value;
                    this.RaisePropertyChanged("UserCerts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIEducation> UserEducation {
            get {
                return this.UserEducationField;
            }
            set {
                if ((object.ReferenceEquals(this.UserEducationField, value) != true)) {
                    this.UserEducationField = value;
                    this.RaisePropertyChanged("UserEducation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLITeam> UserTeams {
            get {
                return this.UserTeamsField;
            }
            set {
                if ((object.ReferenceEquals(this.UserTeamsField, value) != true)) {
                    this.UserTeamsField = value;
                    this.RaisePropertyChanged("UserTeams");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLITitle> UserTitles {
            get {
                return this.UserTitlesField;
            }
            set {
                if ((object.ReferenceEquals(this.UserTitlesField, value) != true)) {
                    this.UserTitlesField = value;
                    this.RaisePropertyChanged("UserTitles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserUrl {
            get {
                return this.UserUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UserUrlField, value) != true)) {
                    this.UserUrlField = value;
                    this.RaisePropertyChanged("UserUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WorkStation {
            get {
                return this.WorkStationField;
            }
            set {
                if ((this.WorkStationField.Equals(value) != true)) {
                    this.WorkStationField = value;
                    this.RaisePropertyChanged("WorkStation");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="USState", Namespace="http://schemas.datacontract.org/2004/07/USLI.WCF.Services")]
    public partial class USState : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string NameField;
        
        private string ShortNameField;
        
        private int StateIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShortName {
            get {
                return this.ShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShortNameField, value) != true)) {
                    this.ShortNameField = value;
                    this.RaisePropertyChanged("ShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StateID {
            get {
                return this.StateIDField;
            }
            set {
                if ((this.StateIDField.Equals(value) != true)) {
                    this.StateIDField = value;
                    this.RaisePropertyChanged("StateID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User50", Namespace="http://schemas.datacontract.org/2004/07/USLI.WCF.Services")]
    public partial class User50 : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CityField;
        
        private int CustIDField;
        
        private string CustNameField;
        
        private string FirstNameField;
        
        private string HireDateField;
        
        private string LastNameField;
        
        private string StateField;
        
        private int StatusField;
        
        private string StatusDescField;
        
        private int UserIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustID {
            get {
                return this.CustIDField;
            }
            set {
                if ((this.CustIDField.Equals(value) != true)) {
                    this.CustIDField = value;
                    this.RaisePropertyChanged("CustID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustName {
            get {
                return this.CustNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustNameField, value) != true)) {
                    this.CustNameField = value;
                    this.RaisePropertyChanged("CustName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HireDate {
            get {
                return this.HireDateField;
            }
            set {
                if ((object.ReferenceEquals(this.HireDateField, value) != true)) {
                    this.HireDateField = value;
                    this.RaisePropertyChanged("HireDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusDesc {
            get {
                return this.StatusDescField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusDescField, value) != true)) {
                    this.StatusDescField = value;
                    this.RaisePropertyChanged("StatusDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Customer50ViewModel", Namespace="http://schemas.datacontract.org/2004/07/USLI.WCF.Services")]
    public partial class Customer50ViewModel : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.GenericEntity> CustomersField;
        
        private System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.GenericEntity> StatesField;
        
        private System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.GenericEntity> StatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.GenericEntity> Customers {
            get {
                return this.CustomersField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomersField, value) != true)) {
                    this.CustomersField = value;
                    this.RaisePropertyChanged("Customers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.GenericEntity> States {
            get {
                return this.StatesField;
            }
            set {
                if ((object.ReferenceEquals(this.StatesField, value) != true)) {
                    this.StatesField = value;
                    this.RaisePropertyChanged("States");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.GenericEntity> Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="USLIUsers", Namespace="http://schemas.datacontract.org/2004/07/USLI.WCF.Services")]
    public partial class USLIUsers : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ExtentionField;
        
        private string FloorIDField;
        
        private int StationIDField;
        
        private int UserIDField;
        
        private string UserNameField;
        
        private int WorkstationIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Extention {
            get {
                return this.ExtentionField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtentionField, value) != true)) {
                    this.ExtentionField = value;
                    this.RaisePropertyChanged("Extention");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FloorID {
            get {
                return this.FloorIDField;
            }
            set {
                if ((object.ReferenceEquals(this.FloorIDField, value) != true)) {
                    this.FloorIDField = value;
                    this.RaisePropertyChanged("FloorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StationID {
            get {
                return this.StationIDField;
            }
            set {
                if ((this.StationIDField.Equals(value) != true)) {
                    this.StationIDField = value;
                    this.RaisePropertyChanged("StationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserID {
            get {
                return this.UserIDField;
            }
            set {
                if ((this.UserIDField.Equals(value) != true)) {
                    this.UserIDField = value;
                    this.RaisePropertyChanged("UserID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WorkstationID {
            get {
                return this.WorkstationIDField;
            }
            set {
                if ((this.WorkstationIDField.Equals(value) != true)) {
                    this.WorkstationIDField = value;
                    this.RaisePropertyChanged("WorkstationID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="USLIContactType", Namespace="http://schemas.datacontract.org/2004/07/USLI.WCF.Services")]
    public partial class USLIContactType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int ContactTypeIDField;
        
        private string ContactTypeNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContactTypeID {
            get {
                return this.ContactTypeIDField;
            }
            set {
                if ((this.ContactTypeIDField.Equals(value) != true)) {
                    this.ContactTypeIDField = value;
                    this.RaisePropertyChanged("ContactTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactTypeName {
            get {
                return this.ContactTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactTypeNameField, value) != true)) {
                    this.ContactTypeNameField = value;
                    this.RaisePropertyChanged("ContactTypeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="USLIContactView", Namespace="http://schemas.datacontract.org/2004/07/USLI.WCF.Services")]
    public partial class USLIContactView : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIContactAsignment> AsignmentDetailsField;
        
        private string DefaultContactNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIContactAsignment> AsignmentDetails {
            get {
                return this.AsignmentDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.AsignmentDetailsField, value) != true)) {
                    this.AsignmentDetailsField = value;
                    this.RaisePropertyChanged("AsignmentDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefaultContactName {
            get {
                return this.DefaultContactNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultContactNameField, value) != true)) {
                    this.DefaultContactNameField = value;
                    this.RaisePropertyChanged("DefaultContactName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="USLIContactIDs", Namespace="http://schemas.datacontract.org/2004/07/USLI.WCF.Services")]
    public partial class USLIContactIDs : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int CatlogIDField;
        
        private int ContactIDField;
        
        private int ContactTypeIDField;
        
        private int DeptIDField;
        
        private int Entity2IDField;
        
        private int EntityIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CatlogID {
            get {
                return this.CatlogIDField;
            }
            set {
                if ((this.CatlogIDField.Equals(value) != true)) {
                    this.CatlogIDField = value;
                    this.RaisePropertyChanged("CatlogID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContactID {
            get {
                return this.ContactIDField;
            }
            set {
                if ((this.ContactIDField.Equals(value) != true)) {
                    this.ContactIDField = value;
                    this.RaisePropertyChanged("ContactID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContactTypeID {
            get {
                return this.ContactTypeIDField;
            }
            set {
                if ((this.ContactTypeIDField.Equals(value) != true)) {
                    this.ContactTypeIDField = value;
                    this.RaisePropertyChanged("ContactTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DeptID {
            get {
                return this.DeptIDField;
            }
            set {
                if ((this.DeptIDField.Equals(value) != true)) {
                    this.DeptIDField = value;
                    this.RaisePropertyChanged("DeptID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Entity2ID {
            get {
                return this.Entity2IDField;
            }
            set {
                if ((this.Entity2IDField.Equals(value) != true)) {
                    this.Entity2IDField = value;
                    this.RaisePropertyChanged("Entity2ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EntityID {
            get {
                return this.EntityIDField;
            }
            set {
                if ((this.EntityIDField.Equals(value) != true)) {
                    this.EntityIDField = value;
                    this.RaisePropertyChanged("EntityID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="USLIContactMainPikerView", Namespace="http://schemas.datacontract.org/2004/07/USLI.WCF.Services")]
    public partial class USLIContactMainPikerView : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<string> BStateField;
        
        private System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIContactType> ContactListField;
        
        private System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLITeam> EntityListOneField;
        
        private System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLITeam> EntityListTwoField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<string> BState {
            get {
                return this.BStateField;
            }
            set {
                if ((object.ReferenceEquals(this.BStateField, value) != true)) {
                    this.BStateField = value;
                    this.RaisePropertyChanged("BState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIContactType> ContactList {
            get {
                return this.ContactListField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactListField, value) != true)) {
                    this.ContactListField = value;
                    this.RaisePropertyChanged("ContactList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLITeam> EntityListOne {
            get {
                return this.EntityListOneField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityListOneField, value) != true)) {
                    this.EntityListOneField = value;
                    this.RaisePropertyChanged("EntityListOne");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLITeam> EntityListTwo {
            get {
                return this.EntityListTwoField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityListTwoField, value) != true)) {
                    this.EntityListTwoField = value;
                    this.RaisePropertyChanged("EntityListTwo");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="USLIContactAsignmentDetailView", Namespace="http://schemas.datacontract.org/2004/07/USLI.WCF.Services")]
    public partial class USLIContactAsignmentDetailView : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIContactAsignmentDetail> CustProdListField;
        
        private System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIContactAsignmentDetail> CustomerListField;
        
        private System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIContactAsignmentDetail> ProductListField;
        
        private System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIContactAsignmentDetail> StateListField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIContactAsignmentDetail> CustProdList {
            get {
                return this.CustProdListField;
            }
            set {
                if ((object.ReferenceEquals(this.CustProdListField, value) != true)) {
                    this.CustProdListField = value;
                    this.RaisePropertyChanged("CustProdList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIContactAsignmentDetail> CustomerList {
            get {
                return this.CustomerListField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerListField, value) != true)) {
                    this.CustomerListField = value;
                    this.RaisePropertyChanged("CustomerList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIContactAsignmentDetail> ProductList {
            get {
                return this.ProductListField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductListField, value) != true)) {
                    this.ProductListField = value;
                    this.RaisePropertyChanged("ProductList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIContactAsignmentDetail> StateList {
            get {
                return this.StateListField;
            }
            set {
                if ((object.ReferenceEquals(this.StateListField, value) != true)) {
                    this.StateListField = value;
                    this.RaisePropertyChanged("StateList");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="USLIContactAsignmentDetail", Namespace="http://schemas.datacontract.org/2004/07/USLI.WCF.Services")]
    public partial class USLIContactAsignmentDetail : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int Entity1IDField;
        
        private string Entity1NameField;
        
        private int Entity2IDField;
        
        private string Entity2NameField;
        
        private int ProductLineIDField;
        
        private string ProductLineNameField;
        
        private int UserTypeIDField;
        
        private string UserTypeNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Entity1ID {
            get {
                return this.Entity1IDField;
            }
            set {
                if ((this.Entity1IDField.Equals(value) != true)) {
                    this.Entity1IDField = value;
                    this.RaisePropertyChanged("Entity1ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Entity1Name {
            get {
                return this.Entity1NameField;
            }
            set {
                if ((object.ReferenceEquals(this.Entity1NameField, value) != true)) {
                    this.Entity1NameField = value;
                    this.RaisePropertyChanged("Entity1Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Entity2ID {
            get {
                return this.Entity2IDField;
            }
            set {
                if ((this.Entity2IDField.Equals(value) != true)) {
                    this.Entity2IDField = value;
                    this.RaisePropertyChanged("Entity2ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Entity2Name {
            get {
                return this.Entity2NameField;
            }
            set {
                if ((object.ReferenceEquals(this.Entity2NameField, value) != true)) {
                    this.Entity2NameField = value;
                    this.RaisePropertyChanged("Entity2Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductLineID {
            get {
                return this.ProductLineIDField;
            }
            set {
                if ((this.ProductLineIDField.Equals(value) != true)) {
                    this.ProductLineIDField = value;
                    this.RaisePropertyChanged("ProductLineID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductLineName {
            get {
                return this.ProductLineNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductLineNameField, value) != true)) {
                    this.ProductLineNameField = value;
                    this.RaisePropertyChanged("ProductLineName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserTypeID {
            get {
                return this.UserTypeIDField;
            }
            set {
                if ((this.UserTypeIDField.Equals(value) != true)) {
                    this.UserTypeIDField = value;
                    this.RaisePropertyChanged("UserTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserTypeName {
            get {
                return this.UserTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserTypeNameField, value) != true)) {
                    this.UserTypeNameField = value;
                    this.RaisePropertyChanged("UserTypeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EnterpriseService.IContactService")]
    public interface IContactService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IContactService/AddStaffToTeam", ReplyAction="http://tempuri.org/IContactService/AddStaffToTeamResponse")]
        System.IAsyncResult BeginAddStaffToTeam(int teamId, int staffId, System.AsyncCallback callback, object asyncState);
        
        void EndAddStaffToTeam(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IContactService/CreateExcelReport", ReplyAction="http://tempuri.org/IContactService/CreateExcelReportResponse")]
        System.IAsyncResult BeginCreateExcelReport(string columndata, System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIContactAsignment> astList, int catlog, System.AsyncCallback callback, object asyncState);
        
        string EndCreateExcelReport(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IContactService/ExcelReport", ReplyAction="http://tempuri.org/IContactService/ExcelReportResponse")]
        System.IAsyncResult BeginExcelReport(string columndata, int iDeptid, int iUserType, int icatlog, int iProdType, System.AsyncCallback callback, object asyncState);
        
        string EndExcelReport(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IContactService/AddWebStaffToTeam", ReplyAction="http://tempuri.org/IContactService/AddWebStaffToTeamResponse")]
        System.IAsyncResult BeginAddWebStaffToTeam(int teamId, int staffId, System.AsyncCallback callback, object asyncState);
        
        void EndAddWebStaffToTeam(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IContactService/DeleteSchool", ReplyAction="http://tempuri.org/IContactService/DeleteSchoolResponse")]
        System.IAsyncResult BeginDeleteSchool(int edId, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteSchool(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IContactService/DeleteStaffFromTeam", ReplyAction="http://tempuri.org/IContactService/DeleteStaffFromTeamResponse")]
        System.IAsyncResult BeginDeleteStaffFromTeam(int teamId, int staffId, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteStaffFromTeam(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IContactService/DeleteUserFifties", ReplyAction="http://tempuri.org/IContactService/DeleteUserFiftiesResponse")]
        System.IAsyncResult BeginDeleteUserFifties(int userid, int agentid, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteUserFifties(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IContactService/DeleteUSLICert", ReplyAction="http://tempuri.org/IContactService/DeleteUSLICertResponse")]
        System.IAsyncResult BeginDeleteUSLICert(int id, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteUSLICert(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IContactService/DeleteUSLITitle", ReplyAction="http://tempuri.org/IContactService/DeleteUSLITitleResponse")]
        System.IAsyncResult BeginDeleteUSLITitle(int id, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteUSLITitle(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IContactService/DeleteWebStaffFromTeam", ReplyAction="http://tempuri.org/IContactService/DeleteWebStaffFromTeamResponse")]
        System.IAsyncResult BeginDeleteWebStaffFromTeam(int teamId, int staffId, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteWebStaffFromTeam(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IContactService/GetCerts", ReplyAction="http://tempuri.org/IContactService/GetCertsResponse")]
        System.IAsyncResult BeginGetCerts(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLICertification> EndGetCerts(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IContactService/GetEducationType", ReplyAction="http://tempuri.org/IContactService/GetEducationTypeResponse")]
        System.IAsyncResult BeginGetEducationType(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.GenericEntity> EndGetEducationType(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IContactService/GetRooms", ReplyAction="http://tempuri.org/IContactService/GetRoomsResponse")]
        System.IAsyncResult BeginGetRooms(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.Conferenceroom> EndGetRooms(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IContactService/GetSchools", ReplyAction="http://tempuri.org/IContactService/GetSchoolsResponse")]
        System.IAsyncResult BeginGetSchools(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIEducation> EndGetSchools(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IContactService/GetStaffAdditions", ReplyAction="http://tempuri.org/IContactService/GetStaffAdditionsResponse")]
        System.IAsyncResult BeginGetStaffAdditions(int staffId, System.AsyncCallback callback, object asyncState);
        
        ContactMaster.EnterpriseService.USLIUserAddition EndGetStaffAdditions(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IContactService/GetStates", ReplyAction="http://tempuri.org/IContactService/GetStatesResponse")]
        System.IAsyncResult BeginGetStates(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USState> EndGetStates(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IContactService/GetTeams", ReplyAction="http://tempuri.org/IContactService/GetTeamsResponse")]
        System.IAsyncResult BeginGetTeams(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLITeam> EndGetTeams(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IContactService/GetTeamStaffs", ReplyAction="http://tempuri.org/IContactService/GetTeamStaffsResponse")]
        System.IAsyncResult BeginGetTeamStaffs(int teamId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIUser> EndGetTeamStaffs(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IContactService/GetTitles", ReplyAction="http://tempuri.org/IContactService/GetTitlesResponse")]
        System.IAsyncResult BeginGetTitles(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLITitle> EndGetTitles(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IContactService/GetUser", ReplyAction="http://tempuri.org/IContactService/GetUserResponse")]
        System.IAsyncResult BeginGetUser(int userID, int workstationid, System.AsyncCallback callback, object asyncState);
        
        ContactMaster.EnterpriseService.USLIUser EndGetUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IContactService/GetUserFifties", ReplyAction="http://tempuri.org/IContactService/GetUserFiftiesResponse")]
        System.IAsyncResult BeginGetUserFifties(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.User50> EndGetUserFifties(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IContactService/GetUserFiftyPickerView", ReplyAction="http://tempuri.org/IContactService/GetUserFiftyPickerViewResponse")]
        System.IAsyncResult BeginGetUserFiftyPickerView(System.AsyncCallback callback, object asyncState);
        
        ContactMaster.EnterpriseService.Customer50ViewModel EndGetUserFiftyPickerView(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IContactService/GetUsers", ReplyAction="http://tempuri.org/IContactService/GetUsersResponse")]
        System.IAsyncResult BeginGetUsers(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIUsers> EndGetUsers(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IContactService/GetWebRegionalContact", ReplyAction="http://tempuri.org/IContactService/GetWebRegionalContactResponse")]
        System.IAsyncResult BeginGetWebRegionalContact(int userID, System.AsyncCallback callback, object asyncState);
        
        ContactMaster.EnterpriseService.USLIUser EndGetWebRegionalContact(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IContactService/GetWebRegionalContacts", ReplyAction="http://tempuri.org/IContactService/GetWebRegionalContactsResponse")]
        System.IAsyncResult BeginGetWebRegionalContacts(int teamId, string statecode, int isUA, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIUser> EndGetWebRegionalContacts(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IContactService/GetWebRegionalTeams", ReplyAction="http://tempuri.org/IContactService/GetWebRegionalTeamsResponse")]
        System.IAsyncResult BeginGetWebRegionalTeams(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLITeam> EndGetWebRegionalTeams(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IContactService/GetWebTeams", ReplyAction="http://tempuri.org/IContactService/GetWebTeamsResponse")]
        System.IAsyncResult BeginGetWebTeams(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLITeam> EndGetWebTeams(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IContactService/GetWebTeamStaffs", ReplyAction="http://tempuri.org/IContactService/GetWebTeamStaffsResponse")]
        System.IAsyncResult BeginGetWebTeamStaffs(int teamId, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIUser> EndGetWebTeamStaffs(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IContactService/SaveStaff", ReplyAction="http://tempuri.org/IContactService/SaveStaffResponse")]
        System.IAsyncResult BeginSaveStaff(ContactMaster.EnterpriseService.USLIUser staff, ContactMaster.EnterpriseService.USLIUserAddition stfAdition, System.AsyncCallback callback, object asyncState);
        
        void EndSaveStaff(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IContactService/SaveUserFifties", ReplyAction="http://tempuri.org/IContactService/SaveUserFiftiesResponse")]
        System.IAsyncResult BeginSaveUserFifties(ContactMaster.EnterpriseService.User50 user, System.AsyncCallback callback, object asyncState);
        
        void EndSaveUserFifties(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IContactService/SaveUSLICert", ReplyAction="http://tempuri.org/IContactService/SaveUSLICertResponse")]
        System.IAsyncResult BeginSaveUSLICert(int id, string name, System.AsyncCallback callback, object asyncState);
        
        void EndSaveUSLICert(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IContactService/SaveUSLIEducation", ReplyAction="http://tempuri.org/IContactService/SaveUSLIEducationResponse")]
        System.IAsyncResult BeginSaveUSLIEducation(ContactMaster.EnterpriseService.USLIEducation ed, System.AsyncCallback callback, object asyncState);
        
        void EndSaveUSLIEducation(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IContactService/SaveUSLITitle", ReplyAction="http://tempuri.org/IContactService/SaveUSLITitleResponse")]
        System.IAsyncResult BeginSaveUSLITitle(int id, string name, System.AsyncCallback callback, object asyncState);
        
        void EndSaveUSLITitle(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IContactService/SaveWebRegionalContact", ReplyAction="http://tempuri.org/IContactService/SaveWebRegionalContactResponse")]
        System.IAsyncResult BeginSaveWebRegionalContact(int DeptID, string state, string ListSelected, string isUA, System.AsyncCallback callback, object asyncState);
        
        bool EndSaveWebRegionalContact(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IContactService/SearchUsers", ReplyAction="http://tempuri.org/IContactService/SearchUsersResponse")]
        System.IAsyncResult BeginSearchUsers(string search, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIUsers> EndSearchUsers(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IContactService/GetContactTypes", ReplyAction="http://tempuri.org/IContactService/GetContactTypesResponse")]
        System.IAsyncResult BeginGetContactTypes(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIContactType> EndGetContactTypes(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IContactService/GetContactDeparts", ReplyAction="http://tempuri.org/IContactService/GetContactDepartsResponse")]
        System.IAsyncResult BeginGetContactDeparts(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLITeam> EndGetContactDeparts(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IContactService/GetContactView", ReplyAction="http://tempuri.org/IContactService/GetContactViewResponse")]
        System.IAsyncResult BeginGetContactView(int productid, int usertype, int catlog, int prodtypeid, System.AsyncCallback callback, object asyncState);
        
        ContactMaster.EnterpriseService.USLIContactView EndGetContactView(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IContactService/SaveDefaultContact", ReplyAction="http://tempuri.org/IContactService/SaveDefaultContactResponse")]
        System.IAsyncResult BeginSaveDefaultContact(ContactMaster.EnterpriseService.USLIContactIDs contids, System.AsyncCallback callback, object asyncState);
        
        bool EndSaveDefaultContact(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IContactService/DeleteDefaultContact", ReplyAction="http://tempuri.org/IContactService/DeleteDefaultContactResponse")]
        System.IAsyncResult BeginDeleteDefaultContact(ContactMaster.EnterpriseService.USLIContactIDs contids, System.AsyncCallback callback, object asyncState);
        
        bool EndDeleteDefaultContact(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IContactService/SaveAssignments", ReplyAction="http://tempuri.org/IContactService/SaveAssignmentsResponse")]
        System.IAsyncResult BeginSaveAssignments(string ContactList, System.AsyncCallback callback, object asyncState);
        
        void EndSaveAssignments(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IContactService/DeleteAssignments", ReplyAction="http://tempuri.org/IContactService/DeleteAssignmentsResponse")]
        System.IAsyncResult BeginDeleteAssignments(string ContactList, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteAssignments(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IContactService/DeleteContactAssignments", ReplyAction="http://tempuri.org/IContactService/DeleteContactAssignmentsResponse")]
        System.IAsyncResult BeginDeleteContactAssignments(string ContactList, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteContactAssignments(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IContactService/GetContactMainPikerView", ReplyAction="http://tempuri.org/IContactService/GetContactMainPikerViewResponse")]
        System.IAsyncResult BeginGetContactMainPikerView(int catlogid, int tmid, System.AsyncCallback callback, object asyncState);
        
        ContactMaster.EnterpriseService.USLIContactMainPikerView EndGetContactMainPikerView(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IContactService/GetContactDetailView", ReplyAction="http://tempuri.org/IContactService/GetContactDetailViewResponse")]
        System.IAsyncResult BeginGetContactDetailView(int userid, System.AsyncCallback callback, object asyncState);
        
        ContactMaster.EnterpriseService.USLIContactAsignmentDetailView EndGetContactDetailView(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IContactService/ReplaceContactAssignments", ReplyAction="http://tempuri.org/IContactService/ReplaceContactAssignmentsResponse")]
        System.IAsyncResult BeginReplaceContactAssignments(int source, int target, System.AsyncCallback callback, object asyncState);
        
        void EndReplaceContactAssignments(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IContactService/GetProducts", ReplyAction="http://tempuri.org/IContactService/GetProductsResponse")]
        System.IAsyncResult BeginGetProducts(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLITeam> EndGetProducts(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IContactServiceChannel : ContactMaster.EnterpriseService.IContactService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateExcelReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateExcelReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ExcelReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ExcelReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCertsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCertsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLICertification> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLICertification>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetEducationTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetEducationTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.GenericEntity> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.GenericEntity>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRoomsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRoomsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.Conferenceroom> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.Conferenceroom>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSchoolsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSchoolsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIEducation> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIEducation>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetStaffAdditionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetStaffAdditionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ContactMaster.EnterpriseService.USLIUserAddition Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ContactMaster.EnterpriseService.USLIUserAddition)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetStatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetStatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USState> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USState>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTeamsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTeamsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLITeam> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLITeam>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTeamStaffsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTeamStaffsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIUser> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIUser>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTitlesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTitlesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLITitle> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLITitle>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ContactMaster.EnterpriseService.USLIUser Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ContactMaster.EnterpriseService.USLIUser)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUserFiftiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUserFiftiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.User50> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.User50>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUserFiftyPickerViewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUserFiftyPickerViewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ContactMaster.EnterpriseService.Customer50ViewModel Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ContactMaster.EnterpriseService.Customer50ViewModel)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIUsers> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIUsers>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetWebRegionalContactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetWebRegionalContactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ContactMaster.EnterpriseService.USLIUser Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ContactMaster.EnterpriseService.USLIUser)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetWebRegionalContactsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetWebRegionalContactsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIUser> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIUser>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetWebRegionalTeamsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetWebRegionalTeamsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLITeam> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLITeam>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetWebTeamsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetWebTeamsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLITeam> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLITeam>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetWebTeamStaffsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetWebTeamStaffsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIUser> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIUser>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveWebRegionalContactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveWebRegionalContactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SearchUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SearchUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIUsers> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIUsers>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetContactTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetContactTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIContactType> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIContactType>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetContactDepartsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetContactDepartsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLITeam> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLITeam>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetContactViewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetContactViewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ContactMaster.EnterpriseService.USLIContactView Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ContactMaster.EnterpriseService.USLIContactView)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaveDefaultContactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveDefaultContactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteDefaultContactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteDefaultContactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetContactMainPikerViewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetContactMainPikerViewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ContactMaster.EnterpriseService.USLIContactMainPikerView Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ContactMaster.EnterpriseService.USLIContactMainPikerView)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetContactDetailViewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetContactDetailViewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public ContactMaster.EnterpriseService.USLIContactAsignmentDetailView Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((ContactMaster.EnterpriseService.USLIContactAsignmentDetailView)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetProductsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetProductsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLITeam> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLITeam>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ContactServiceClient : System.ServiceModel.ClientBase<ContactMaster.EnterpriseService.IContactService>, ContactMaster.EnterpriseService.IContactService {
        
        private BeginOperationDelegate onBeginAddStaffToTeamDelegate;
        
        private EndOperationDelegate onEndAddStaffToTeamDelegate;
        
        private System.Threading.SendOrPostCallback onAddStaffToTeamCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateExcelReportDelegate;
        
        private EndOperationDelegate onEndCreateExcelReportDelegate;
        
        private System.Threading.SendOrPostCallback onCreateExcelReportCompletedDelegate;
        
        private BeginOperationDelegate onBeginExcelReportDelegate;
        
        private EndOperationDelegate onEndExcelReportDelegate;
        
        private System.Threading.SendOrPostCallback onExcelReportCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddWebStaffToTeamDelegate;
        
        private EndOperationDelegate onEndAddWebStaffToTeamDelegate;
        
        private System.Threading.SendOrPostCallback onAddWebStaffToTeamCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteSchoolDelegate;
        
        private EndOperationDelegate onEndDeleteSchoolDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteSchoolCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteStaffFromTeamDelegate;
        
        private EndOperationDelegate onEndDeleteStaffFromTeamDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteStaffFromTeamCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteUserFiftiesDelegate;
        
        private EndOperationDelegate onEndDeleteUserFiftiesDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteUserFiftiesCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteUSLICertDelegate;
        
        private EndOperationDelegate onEndDeleteUSLICertDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteUSLICertCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteUSLITitleDelegate;
        
        private EndOperationDelegate onEndDeleteUSLITitleDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteUSLITitleCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteWebStaffFromTeamDelegate;
        
        private EndOperationDelegate onEndDeleteWebStaffFromTeamDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteWebStaffFromTeamCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCertsDelegate;
        
        private EndOperationDelegate onEndGetCertsDelegate;
        
        private System.Threading.SendOrPostCallback onGetCertsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetEducationTypeDelegate;
        
        private EndOperationDelegate onEndGetEducationTypeDelegate;
        
        private System.Threading.SendOrPostCallback onGetEducationTypeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRoomsDelegate;
        
        private EndOperationDelegate onEndGetRoomsDelegate;
        
        private System.Threading.SendOrPostCallback onGetRoomsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSchoolsDelegate;
        
        private EndOperationDelegate onEndGetSchoolsDelegate;
        
        private System.Threading.SendOrPostCallback onGetSchoolsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetStaffAdditionsDelegate;
        
        private EndOperationDelegate onEndGetStaffAdditionsDelegate;
        
        private System.Threading.SendOrPostCallback onGetStaffAdditionsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetStatesDelegate;
        
        private EndOperationDelegate onEndGetStatesDelegate;
        
        private System.Threading.SendOrPostCallback onGetStatesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTeamsDelegate;
        
        private EndOperationDelegate onEndGetTeamsDelegate;
        
        private System.Threading.SendOrPostCallback onGetTeamsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTeamStaffsDelegate;
        
        private EndOperationDelegate onEndGetTeamStaffsDelegate;
        
        private System.Threading.SendOrPostCallback onGetTeamStaffsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTitlesDelegate;
        
        private EndOperationDelegate onEndGetTitlesDelegate;
        
        private System.Threading.SendOrPostCallback onGetTitlesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUserDelegate;
        
        private EndOperationDelegate onEndGetUserDelegate;
        
        private System.Threading.SendOrPostCallback onGetUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUserFiftiesDelegate;
        
        private EndOperationDelegate onEndGetUserFiftiesDelegate;
        
        private System.Threading.SendOrPostCallback onGetUserFiftiesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUserFiftyPickerViewDelegate;
        
        private EndOperationDelegate onEndGetUserFiftyPickerViewDelegate;
        
        private System.Threading.SendOrPostCallback onGetUserFiftyPickerViewCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUsersDelegate;
        
        private EndOperationDelegate onEndGetUsersDelegate;
        
        private System.Threading.SendOrPostCallback onGetUsersCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetWebRegionalContactDelegate;
        
        private EndOperationDelegate onEndGetWebRegionalContactDelegate;
        
        private System.Threading.SendOrPostCallback onGetWebRegionalContactCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetWebRegionalContactsDelegate;
        
        private EndOperationDelegate onEndGetWebRegionalContactsDelegate;
        
        private System.Threading.SendOrPostCallback onGetWebRegionalContactsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetWebRegionalTeamsDelegate;
        
        private EndOperationDelegate onEndGetWebRegionalTeamsDelegate;
        
        private System.Threading.SendOrPostCallback onGetWebRegionalTeamsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetWebTeamsDelegate;
        
        private EndOperationDelegate onEndGetWebTeamsDelegate;
        
        private System.Threading.SendOrPostCallback onGetWebTeamsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetWebTeamStaffsDelegate;
        
        private EndOperationDelegate onEndGetWebTeamStaffsDelegate;
        
        private System.Threading.SendOrPostCallback onGetWebTeamStaffsCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveStaffDelegate;
        
        private EndOperationDelegate onEndSaveStaffDelegate;
        
        private System.Threading.SendOrPostCallback onSaveStaffCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveUserFiftiesDelegate;
        
        private EndOperationDelegate onEndSaveUserFiftiesDelegate;
        
        private System.Threading.SendOrPostCallback onSaveUserFiftiesCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveUSLICertDelegate;
        
        private EndOperationDelegate onEndSaveUSLICertDelegate;
        
        private System.Threading.SendOrPostCallback onSaveUSLICertCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveUSLIEducationDelegate;
        
        private EndOperationDelegate onEndSaveUSLIEducationDelegate;
        
        private System.Threading.SendOrPostCallback onSaveUSLIEducationCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveUSLITitleDelegate;
        
        private EndOperationDelegate onEndSaveUSLITitleDelegate;
        
        private System.Threading.SendOrPostCallback onSaveUSLITitleCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveWebRegionalContactDelegate;
        
        private EndOperationDelegate onEndSaveWebRegionalContactDelegate;
        
        private System.Threading.SendOrPostCallback onSaveWebRegionalContactCompletedDelegate;
        
        private BeginOperationDelegate onBeginSearchUsersDelegate;
        
        private EndOperationDelegate onEndSearchUsersDelegate;
        
        private System.Threading.SendOrPostCallback onSearchUsersCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetContactTypesDelegate;
        
        private EndOperationDelegate onEndGetContactTypesDelegate;
        
        private System.Threading.SendOrPostCallback onGetContactTypesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetContactDepartsDelegate;
        
        private EndOperationDelegate onEndGetContactDepartsDelegate;
        
        private System.Threading.SendOrPostCallback onGetContactDepartsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetContactViewDelegate;
        
        private EndOperationDelegate onEndGetContactViewDelegate;
        
        private System.Threading.SendOrPostCallback onGetContactViewCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveDefaultContactDelegate;
        
        private EndOperationDelegate onEndSaveDefaultContactDelegate;
        
        private System.Threading.SendOrPostCallback onSaveDefaultContactCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteDefaultContactDelegate;
        
        private EndOperationDelegate onEndDeleteDefaultContactDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteDefaultContactCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveAssignmentsDelegate;
        
        private EndOperationDelegate onEndSaveAssignmentsDelegate;
        
        private System.Threading.SendOrPostCallback onSaveAssignmentsCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteAssignmentsDelegate;
        
        private EndOperationDelegate onEndDeleteAssignmentsDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteAssignmentsCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteContactAssignmentsDelegate;
        
        private EndOperationDelegate onEndDeleteContactAssignmentsDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteContactAssignmentsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetContactMainPikerViewDelegate;
        
        private EndOperationDelegate onEndGetContactMainPikerViewDelegate;
        
        private System.Threading.SendOrPostCallback onGetContactMainPikerViewCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetContactDetailViewDelegate;
        
        private EndOperationDelegate onEndGetContactDetailViewDelegate;
        
        private System.Threading.SendOrPostCallback onGetContactDetailViewCompletedDelegate;
        
        private BeginOperationDelegate onBeginReplaceContactAssignmentsDelegate;
        
        private EndOperationDelegate onEndReplaceContactAssignmentsDelegate;
        
        private System.Threading.SendOrPostCallback onReplaceContactAssignmentsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetProductsDelegate;
        
        private EndOperationDelegate onEndGetProductsDelegate;
        
        private System.Threading.SendOrPostCallback onGetProductsCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public ContactServiceClient() {
        }
        
        public ContactServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ContactServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ContactServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ContactServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddStaffToTeamCompleted;
        
        public event System.EventHandler<CreateExcelReportCompletedEventArgs> CreateExcelReportCompleted;
        
        public event System.EventHandler<ExcelReportCompletedEventArgs> ExcelReportCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddWebStaffToTeamCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteSchoolCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteStaffFromTeamCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteUserFiftiesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteUSLICertCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteUSLITitleCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteWebStaffFromTeamCompleted;
        
        public event System.EventHandler<GetCertsCompletedEventArgs> GetCertsCompleted;
        
        public event System.EventHandler<GetEducationTypeCompletedEventArgs> GetEducationTypeCompleted;
        
        public event System.EventHandler<GetRoomsCompletedEventArgs> GetRoomsCompleted;
        
        public event System.EventHandler<GetSchoolsCompletedEventArgs> GetSchoolsCompleted;
        
        public event System.EventHandler<GetStaffAdditionsCompletedEventArgs> GetStaffAdditionsCompleted;
        
        public event System.EventHandler<GetStatesCompletedEventArgs> GetStatesCompleted;
        
        public event System.EventHandler<GetTeamsCompletedEventArgs> GetTeamsCompleted;
        
        public event System.EventHandler<GetTeamStaffsCompletedEventArgs> GetTeamStaffsCompleted;
        
        public event System.EventHandler<GetTitlesCompletedEventArgs> GetTitlesCompleted;
        
        public event System.EventHandler<GetUserCompletedEventArgs> GetUserCompleted;
        
        public event System.EventHandler<GetUserFiftiesCompletedEventArgs> GetUserFiftiesCompleted;
        
        public event System.EventHandler<GetUserFiftyPickerViewCompletedEventArgs> GetUserFiftyPickerViewCompleted;
        
        public event System.EventHandler<GetUsersCompletedEventArgs> GetUsersCompleted;
        
        public event System.EventHandler<GetWebRegionalContactCompletedEventArgs> GetWebRegionalContactCompleted;
        
        public event System.EventHandler<GetWebRegionalContactsCompletedEventArgs> GetWebRegionalContactsCompleted;
        
        public event System.EventHandler<GetWebRegionalTeamsCompletedEventArgs> GetWebRegionalTeamsCompleted;
        
        public event System.EventHandler<GetWebTeamsCompletedEventArgs> GetWebTeamsCompleted;
        
        public event System.EventHandler<GetWebTeamStaffsCompletedEventArgs> GetWebTeamStaffsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SaveStaffCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SaveUserFiftiesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SaveUSLICertCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SaveUSLIEducationCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SaveUSLITitleCompleted;
        
        public event System.EventHandler<SaveWebRegionalContactCompletedEventArgs> SaveWebRegionalContactCompleted;
        
        public event System.EventHandler<SearchUsersCompletedEventArgs> SearchUsersCompleted;
        
        public event System.EventHandler<GetContactTypesCompletedEventArgs> GetContactTypesCompleted;
        
        public event System.EventHandler<GetContactDepartsCompletedEventArgs> GetContactDepartsCompleted;
        
        public event System.EventHandler<GetContactViewCompletedEventArgs> GetContactViewCompleted;
        
        public event System.EventHandler<SaveDefaultContactCompletedEventArgs> SaveDefaultContactCompleted;
        
        public event System.EventHandler<DeleteDefaultContactCompletedEventArgs> DeleteDefaultContactCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SaveAssignmentsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteAssignmentsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteContactAssignmentsCompleted;
        
        public event System.EventHandler<GetContactMainPikerViewCompletedEventArgs> GetContactMainPikerViewCompleted;
        
        public event System.EventHandler<GetContactDetailViewCompletedEventArgs> GetContactDetailViewCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ReplaceContactAssignmentsCompleted;
        
        public event System.EventHandler<GetProductsCompletedEventArgs> GetProductsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ContactMaster.EnterpriseService.IContactService.BeginAddStaffToTeam(int teamId, int staffId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddStaffToTeam(teamId, staffId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void ContactMaster.EnterpriseService.IContactService.EndAddStaffToTeam(System.IAsyncResult result) {
            base.Channel.EndAddStaffToTeam(result);
        }
        
        private System.IAsyncResult OnBeginAddStaffToTeam(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int teamId = ((int)(inValues[0]));
            int staffId = ((int)(inValues[1]));
            return ((ContactMaster.EnterpriseService.IContactService)(this)).BeginAddStaffToTeam(teamId, staffId, callback, asyncState);
        }
        
        private object[] OnEndAddStaffToTeam(System.IAsyncResult result) {
            ((ContactMaster.EnterpriseService.IContactService)(this)).EndAddStaffToTeam(result);
            return null;
        }
        
        private void OnAddStaffToTeamCompleted(object state) {
            if ((this.AddStaffToTeamCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddStaffToTeamCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddStaffToTeamAsync(int teamId, int staffId) {
            this.AddStaffToTeamAsync(teamId, staffId, null);
        }
        
        public void AddStaffToTeamAsync(int teamId, int staffId, object userState) {
            if ((this.onBeginAddStaffToTeamDelegate == null)) {
                this.onBeginAddStaffToTeamDelegate = new BeginOperationDelegate(this.OnBeginAddStaffToTeam);
            }
            if ((this.onEndAddStaffToTeamDelegate == null)) {
                this.onEndAddStaffToTeamDelegate = new EndOperationDelegate(this.OnEndAddStaffToTeam);
            }
            if ((this.onAddStaffToTeamCompletedDelegate == null)) {
                this.onAddStaffToTeamCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddStaffToTeamCompleted);
            }
            base.InvokeAsync(this.onBeginAddStaffToTeamDelegate, new object[] {
                        teamId,
                        staffId}, this.onEndAddStaffToTeamDelegate, this.onAddStaffToTeamCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ContactMaster.EnterpriseService.IContactService.BeginCreateExcelReport(string columndata, System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIContactAsignment> astList, int catlog, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateExcelReport(columndata, astList, catlog, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string ContactMaster.EnterpriseService.IContactService.EndCreateExcelReport(System.IAsyncResult result) {
            return base.Channel.EndCreateExcelReport(result);
        }
        
        private System.IAsyncResult OnBeginCreateExcelReport(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string columndata = ((string)(inValues[0]));
            System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIContactAsignment> astList = ((System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIContactAsignment>)(inValues[1]));
            int catlog = ((int)(inValues[2]));
            return ((ContactMaster.EnterpriseService.IContactService)(this)).BeginCreateExcelReport(columndata, astList, catlog, callback, asyncState);
        }
        
        private object[] OnEndCreateExcelReport(System.IAsyncResult result) {
            string retVal = ((ContactMaster.EnterpriseService.IContactService)(this)).EndCreateExcelReport(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateExcelReportCompleted(object state) {
            if ((this.CreateExcelReportCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateExcelReportCompleted(this, new CreateExcelReportCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateExcelReportAsync(string columndata, System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIContactAsignment> astList, int catlog) {
            this.CreateExcelReportAsync(columndata, astList, catlog, null);
        }
        
        public void CreateExcelReportAsync(string columndata, System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIContactAsignment> astList, int catlog, object userState) {
            if ((this.onBeginCreateExcelReportDelegate == null)) {
                this.onBeginCreateExcelReportDelegate = new BeginOperationDelegate(this.OnBeginCreateExcelReport);
            }
            if ((this.onEndCreateExcelReportDelegate == null)) {
                this.onEndCreateExcelReportDelegate = new EndOperationDelegate(this.OnEndCreateExcelReport);
            }
            if ((this.onCreateExcelReportCompletedDelegate == null)) {
                this.onCreateExcelReportCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateExcelReportCompleted);
            }
            base.InvokeAsync(this.onBeginCreateExcelReportDelegate, new object[] {
                        columndata,
                        astList,
                        catlog}, this.onEndCreateExcelReportDelegate, this.onCreateExcelReportCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ContactMaster.EnterpriseService.IContactService.BeginExcelReport(string columndata, int iDeptid, int iUserType, int icatlog, int iProdType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginExcelReport(columndata, iDeptid, iUserType, icatlog, iProdType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string ContactMaster.EnterpriseService.IContactService.EndExcelReport(System.IAsyncResult result) {
            return base.Channel.EndExcelReport(result);
        }
        
        private System.IAsyncResult OnBeginExcelReport(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string columndata = ((string)(inValues[0]));
            int iDeptid = ((int)(inValues[1]));
            int iUserType = ((int)(inValues[2]));
            int icatlog = ((int)(inValues[3]));
            int iProdType = ((int)(inValues[4]));
            return ((ContactMaster.EnterpriseService.IContactService)(this)).BeginExcelReport(columndata, iDeptid, iUserType, icatlog, iProdType, callback, asyncState);
        }
        
        private object[] OnEndExcelReport(System.IAsyncResult result) {
            string retVal = ((ContactMaster.EnterpriseService.IContactService)(this)).EndExcelReport(result);
            return new object[] {
                    retVal};
        }
        
        private void OnExcelReportCompleted(object state) {
            if ((this.ExcelReportCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ExcelReportCompleted(this, new ExcelReportCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ExcelReportAsync(string columndata, int iDeptid, int iUserType, int icatlog, int iProdType) {
            this.ExcelReportAsync(columndata, iDeptid, iUserType, icatlog, iProdType, null);
        }
        
        public void ExcelReportAsync(string columndata, int iDeptid, int iUserType, int icatlog, int iProdType, object userState) {
            if ((this.onBeginExcelReportDelegate == null)) {
                this.onBeginExcelReportDelegate = new BeginOperationDelegate(this.OnBeginExcelReport);
            }
            if ((this.onEndExcelReportDelegate == null)) {
                this.onEndExcelReportDelegate = new EndOperationDelegate(this.OnEndExcelReport);
            }
            if ((this.onExcelReportCompletedDelegate == null)) {
                this.onExcelReportCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnExcelReportCompleted);
            }
            base.InvokeAsync(this.onBeginExcelReportDelegate, new object[] {
                        columndata,
                        iDeptid,
                        iUserType,
                        icatlog,
                        iProdType}, this.onEndExcelReportDelegate, this.onExcelReportCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ContactMaster.EnterpriseService.IContactService.BeginAddWebStaffToTeam(int teamId, int staffId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddWebStaffToTeam(teamId, staffId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void ContactMaster.EnterpriseService.IContactService.EndAddWebStaffToTeam(System.IAsyncResult result) {
            base.Channel.EndAddWebStaffToTeam(result);
        }
        
        private System.IAsyncResult OnBeginAddWebStaffToTeam(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int teamId = ((int)(inValues[0]));
            int staffId = ((int)(inValues[1]));
            return ((ContactMaster.EnterpriseService.IContactService)(this)).BeginAddWebStaffToTeam(teamId, staffId, callback, asyncState);
        }
        
        private object[] OnEndAddWebStaffToTeam(System.IAsyncResult result) {
            ((ContactMaster.EnterpriseService.IContactService)(this)).EndAddWebStaffToTeam(result);
            return null;
        }
        
        private void OnAddWebStaffToTeamCompleted(object state) {
            if ((this.AddWebStaffToTeamCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddWebStaffToTeamCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddWebStaffToTeamAsync(int teamId, int staffId) {
            this.AddWebStaffToTeamAsync(teamId, staffId, null);
        }
        
        public void AddWebStaffToTeamAsync(int teamId, int staffId, object userState) {
            if ((this.onBeginAddWebStaffToTeamDelegate == null)) {
                this.onBeginAddWebStaffToTeamDelegate = new BeginOperationDelegate(this.OnBeginAddWebStaffToTeam);
            }
            if ((this.onEndAddWebStaffToTeamDelegate == null)) {
                this.onEndAddWebStaffToTeamDelegate = new EndOperationDelegate(this.OnEndAddWebStaffToTeam);
            }
            if ((this.onAddWebStaffToTeamCompletedDelegate == null)) {
                this.onAddWebStaffToTeamCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddWebStaffToTeamCompleted);
            }
            base.InvokeAsync(this.onBeginAddWebStaffToTeamDelegate, new object[] {
                        teamId,
                        staffId}, this.onEndAddWebStaffToTeamDelegate, this.onAddWebStaffToTeamCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ContactMaster.EnterpriseService.IContactService.BeginDeleteSchool(int edId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteSchool(edId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void ContactMaster.EnterpriseService.IContactService.EndDeleteSchool(System.IAsyncResult result) {
            base.Channel.EndDeleteSchool(result);
        }
        
        private System.IAsyncResult OnBeginDeleteSchool(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int edId = ((int)(inValues[0]));
            return ((ContactMaster.EnterpriseService.IContactService)(this)).BeginDeleteSchool(edId, callback, asyncState);
        }
        
        private object[] OnEndDeleteSchool(System.IAsyncResult result) {
            ((ContactMaster.EnterpriseService.IContactService)(this)).EndDeleteSchool(result);
            return null;
        }
        
        private void OnDeleteSchoolCompleted(object state) {
            if ((this.DeleteSchoolCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteSchoolCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteSchoolAsync(int edId) {
            this.DeleteSchoolAsync(edId, null);
        }
        
        public void DeleteSchoolAsync(int edId, object userState) {
            if ((this.onBeginDeleteSchoolDelegate == null)) {
                this.onBeginDeleteSchoolDelegate = new BeginOperationDelegate(this.OnBeginDeleteSchool);
            }
            if ((this.onEndDeleteSchoolDelegate == null)) {
                this.onEndDeleteSchoolDelegate = new EndOperationDelegate(this.OnEndDeleteSchool);
            }
            if ((this.onDeleteSchoolCompletedDelegate == null)) {
                this.onDeleteSchoolCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteSchoolCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteSchoolDelegate, new object[] {
                        edId}, this.onEndDeleteSchoolDelegate, this.onDeleteSchoolCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ContactMaster.EnterpriseService.IContactService.BeginDeleteStaffFromTeam(int teamId, int staffId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteStaffFromTeam(teamId, staffId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void ContactMaster.EnterpriseService.IContactService.EndDeleteStaffFromTeam(System.IAsyncResult result) {
            base.Channel.EndDeleteStaffFromTeam(result);
        }
        
        private System.IAsyncResult OnBeginDeleteStaffFromTeam(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int teamId = ((int)(inValues[0]));
            int staffId = ((int)(inValues[1]));
            return ((ContactMaster.EnterpriseService.IContactService)(this)).BeginDeleteStaffFromTeam(teamId, staffId, callback, asyncState);
        }
        
        private object[] OnEndDeleteStaffFromTeam(System.IAsyncResult result) {
            ((ContactMaster.EnterpriseService.IContactService)(this)).EndDeleteStaffFromTeam(result);
            return null;
        }
        
        private void OnDeleteStaffFromTeamCompleted(object state) {
            if ((this.DeleteStaffFromTeamCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteStaffFromTeamCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteStaffFromTeamAsync(int teamId, int staffId) {
            this.DeleteStaffFromTeamAsync(teamId, staffId, null);
        }
        
        public void DeleteStaffFromTeamAsync(int teamId, int staffId, object userState) {
            if ((this.onBeginDeleteStaffFromTeamDelegate == null)) {
                this.onBeginDeleteStaffFromTeamDelegate = new BeginOperationDelegate(this.OnBeginDeleteStaffFromTeam);
            }
            if ((this.onEndDeleteStaffFromTeamDelegate == null)) {
                this.onEndDeleteStaffFromTeamDelegate = new EndOperationDelegate(this.OnEndDeleteStaffFromTeam);
            }
            if ((this.onDeleteStaffFromTeamCompletedDelegate == null)) {
                this.onDeleteStaffFromTeamCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteStaffFromTeamCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteStaffFromTeamDelegate, new object[] {
                        teamId,
                        staffId}, this.onEndDeleteStaffFromTeamDelegate, this.onDeleteStaffFromTeamCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ContactMaster.EnterpriseService.IContactService.BeginDeleteUserFifties(int userid, int agentid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteUserFifties(userid, agentid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void ContactMaster.EnterpriseService.IContactService.EndDeleteUserFifties(System.IAsyncResult result) {
            base.Channel.EndDeleteUserFifties(result);
        }
        
        private System.IAsyncResult OnBeginDeleteUserFifties(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int userid = ((int)(inValues[0]));
            int agentid = ((int)(inValues[1]));
            return ((ContactMaster.EnterpriseService.IContactService)(this)).BeginDeleteUserFifties(userid, agentid, callback, asyncState);
        }
        
        private object[] OnEndDeleteUserFifties(System.IAsyncResult result) {
            ((ContactMaster.EnterpriseService.IContactService)(this)).EndDeleteUserFifties(result);
            return null;
        }
        
        private void OnDeleteUserFiftiesCompleted(object state) {
            if ((this.DeleteUserFiftiesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteUserFiftiesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteUserFiftiesAsync(int userid, int agentid) {
            this.DeleteUserFiftiesAsync(userid, agentid, null);
        }
        
        public void DeleteUserFiftiesAsync(int userid, int agentid, object userState) {
            if ((this.onBeginDeleteUserFiftiesDelegate == null)) {
                this.onBeginDeleteUserFiftiesDelegate = new BeginOperationDelegate(this.OnBeginDeleteUserFifties);
            }
            if ((this.onEndDeleteUserFiftiesDelegate == null)) {
                this.onEndDeleteUserFiftiesDelegate = new EndOperationDelegate(this.OnEndDeleteUserFifties);
            }
            if ((this.onDeleteUserFiftiesCompletedDelegate == null)) {
                this.onDeleteUserFiftiesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteUserFiftiesCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteUserFiftiesDelegate, new object[] {
                        userid,
                        agentid}, this.onEndDeleteUserFiftiesDelegate, this.onDeleteUserFiftiesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ContactMaster.EnterpriseService.IContactService.BeginDeleteUSLICert(int id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteUSLICert(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void ContactMaster.EnterpriseService.IContactService.EndDeleteUSLICert(System.IAsyncResult result) {
            base.Channel.EndDeleteUSLICert(result);
        }
        
        private System.IAsyncResult OnBeginDeleteUSLICert(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            return ((ContactMaster.EnterpriseService.IContactService)(this)).BeginDeleteUSLICert(id, callback, asyncState);
        }
        
        private object[] OnEndDeleteUSLICert(System.IAsyncResult result) {
            ((ContactMaster.EnterpriseService.IContactService)(this)).EndDeleteUSLICert(result);
            return null;
        }
        
        private void OnDeleteUSLICertCompleted(object state) {
            if ((this.DeleteUSLICertCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteUSLICertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteUSLICertAsync(int id) {
            this.DeleteUSLICertAsync(id, null);
        }
        
        public void DeleteUSLICertAsync(int id, object userState) {
            if ((this.onBeginDeleteUSLICertDelegate == null)) {
                this.onBeginDeleteUSLICertDelegate = new BeginOperationDelegate(this.OnBeginDeleteUSLICert);
            }
            if ((this.onEndDeleteUSLICertDelegate == null)) {
                this.onEndDeleteUSLICertDelegate = new EndOperationDelegate(this.OnEndDeleteUSLICert);
            }
            if ((this.onDeleteUSLICertCompletedDelegate == null)) {
                this.onDeleteUSLICertCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteUSLICertCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteUSLICertDelegate, new object[] {
                        id}, this.onEndDeleteUSLICertDelegate, this.onDeleteUSLICertCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ContactMaster.EnterpriseService.IContactService.BeginDeleteUSLITitle(int id, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteUSLITitle(id, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void ContactMaster.EnterpriseService.IContactService.EndDeleteUSLITitle(System.IAsyncResult result) {
            base.Channel.EndDeleteUSLITitle(result);
        }
        
        private System.IAsyncResult OnBeginDeleteUSLITitle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            return ((ContactMaster.EnterpriseService.IContactService)(this)).BeginDeleteUSLITitle(id, callback, asyncState);
        }
        
        private object[] OnEndDeleteUSLITitle(System.IAsyncResult result) {
            ((ContactMaster.EnterpriseService.IContactService)(this)).EndDeleteUSLITitle(result);
            return null;
        }
        
        private void OnDeleteUSLITitleCompleted(object state) {
            if ((this.DeleteUSLITitleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteUSLITitleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteUSLITitleAsync(int id) {
            this.DeleteUSLITitleAsync(id, null);
        }
        
        public void DeleteUSLITitleAsync(int id, object userState) {
            if ((this.onBeginDeleteUSLITitleDelegate == null)) {
                this.onBeginDeleteUSLITitleDelegate = new BeginOperationDelegate(this.OnBeginDeleteUSLITitle);
            }
            if ((this.onEndDeleteUSLITitleDelegate == null)) {
                this.onEndDeleteUSLITitleDelegate = new EndOperationDelegate(this.OnEndDeleteUSLITitle);
            }
            if ((this.onDeleteUSLITitleCompletedDelegate == null)) {
                this.onDeleteUSLITitleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteUSLITitleCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteUSLITitleDelegate, new object[] {
                        id}, this.onEndDeleteUSLITitleDelegate, this.onDeleteUSLITitleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ContactMaster.EnterpriseService.IContactService.BeginDeleteWebStaffFromTeam(int teamId, int staffId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteWebStaffFromTeam(teamId, staffId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void ContactMaster.EnterpriseService.IContactService.EndDeleteWebStaffFromTeam(System.IAsyncResult result) {
            base.Channel.EndDeleteWebStaffFromTeam(result);
        }
        
        private System.IAsyncResult OnBeginDeleteWebStaffFromTeam(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int teamId = ((int)(inValues[0]));
            int staffId = ((int)(inValues[1]));
            return ((ContactMaster.EnterpriseService.IContactService)(this)).BeginDeleteWebStaffFromTeam(teamId, staffId, callback, asyncState);
        }
        
        private object[] OnEndDeleteWebStaffFromTeam(System.IAsyncResult result) {
            ((ContactMaster.EnterpriseService.IContactService)(this)).EndDeleteWebStaffFromTeam(result);
            return null;
        }
        
        private void OnDeleteWebStaffFromTeamCompleted(object state) {
            if ((this.DeleteWebStaffFromTeamCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteWebStaffFromTeamCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteWebStaffFromTeamAsync(int teamId, int staffId) {
            this.DeleteWebStaffFromTeamAsync(teamId, staffId, null);
        }
        
        public void DeleteWebStaffFromTeamAsync(int teamId, int staffId, object userState) {
            if ((this.onBeginDeleteWebStaffFromTeamDelegate == null)) {
                this.onBeginDeleteWebStaffFromTeamDelegate = new BeginOperationDelegate(this.OnBeginDeleteWebStaffFromTeam);
            }
            if ((this.onEndDeleteWebStaffFromTeamDelegate == null)) {
                this.onEndDeleteWebStaffFromTeamDelegate = new EndOperationDelegate(this.OnEndDeleteWebStaffFromTeam);
            }
            if ((this.onDeleteWebStaffFromTeamCompletedDelegate == null)) {
                this.onDeleteWebStaffFromTeamCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteWebStaffFromTeamCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteWebStaffFromTeamDelegate, new object[] {
                        teamId,
                        staffId}, this.onEndDeleteWebStaffFromTeamDelegate, this.onDeleteWebStaffFromTeamCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ContactMaster.EnterpriseService.IContactService.BeginGetCerts(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCerts(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLICertification> ContactMaster.EnterpriseService.IContactService.EndGetCerts(System.IAsyncResult result) {
            return base.Channel.EndGetCerts(result);
        }
        
        private System.IAsyncResult OnBeginGetCerts(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((ContactMaster.EnterpriseService.IContactService)(this)).BeginGetCerts(callback, asyncState);
        }
        
        private object[] OnEndGetCerts(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLICertification> retVal = ((ContactMaster.EnterpriseService.IContactService)(this)).EndGetCerts(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCertsCompleted(object state) {
            if ((this.GetCertsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCertsCompleted(this, new GetCertsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCertsAsync() {
            this.GetCertsAsync(null);
        }
        
        public void GetCertsAsync(object userState) {
            if ((this.onBeginGetCertsDelegate == null)) {
                this.onBeginGetCertsDelegate = new BeginOperationDelegate(this.OnBeginGetCerts);
            }
            if ((this.onEndGetCertsDelegate == null)) {
                this.onEndGetCertsDelegate = new EndOperationDelegate(this.OnEndGetCerts);
            }
            if ((this.onGetCertsCompletedDelegate == null)) {
                this.onGetCertsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCertsCompleted);
            }
            base.InvokeAsync(this.onBeginGetCertsDelegate, null, this.onEndGetCertsDelegate, this.onGetCertsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ContactMaster.EnterpriseService.IContactService.BeginGetEducationType(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetEducationType(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.GenericEntity> ContactMaster.EnterpriseService.IContactService.EndGetEducationType(System.IAsyncResult result) {
            return base.Channel.EndGetEducationType(result);
        }
        
        private System.IAsyncResult OnBeginGetEducationType(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((ContactMaster.EnterpriseService.IContactService)(this)).BeginGetEducationType(callback, asyncState);
        }
        
        private object[] OnEndGetEducationType(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.GenericEntity> retVal = ((ContactMaster.EnterpriseService.IContactService)(this)).EndGetEducationType(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetEducationTypeCompleted(object state) {
            if ((this.GetEducationTypeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetEducationTypeCompleted(this, new GetEducationTypeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetEducationTypeAsync() {
            this.GetEducationTypeAsync(null);
        }
        
        public void GetEducationTypeAsync(object userState) {
            if ((this.onBeginGetEducationTypeDelegate == null)) {
                this.onBeginGetEducationTypeDelegate = new BeginOperationDelegate(this.OnBeginGetEducationType);
            }
            if ((this.onEndGetEducationTypeDelegate == null)) {
                this.onEndGetEducationTypeDelegate = new EndOperationDelegate(this.OnEndGetEducationType);
            }
            if ((this.onGetEducationTypeCompletedDelegate == null)) {
                this.onGetEducationTypeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetEducationTypeCompleted);
            }
            base.InvokeAsync(this.onBeginGetEducationTypeDelegate, null, this.onEndGetEducationTypeDelegate, this.onGetEducationTypeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ContactMaster.EnterpriseService.IContactService.BeginGetRooms(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRooms(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.Conferenceroom> ContactMaster.EnterpriseService.IContactService.EndGetRooms(System.IAsyncResult result) {
            return base.Channel.EndGetRooms(result);
        }
        
        private System.IAsyncResult OnBeginGetRooms(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((ContactMaster.EnterpriseService.IContactService)(this)).BeginGetRooms(callback, asyncState);
        }
        
        private object[] OnEndGetRooms(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.Conferenceroom> retVal = ((ContactMaster.EnterpriseService.IContactService)(this)).EndGetRooms(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRoomsCompleted(object state) {
            if ((this.GetRoomsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRoomsCompleted(this, new GetRoomsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRoomsAsync() {
            this.GetRoomsAsync(null);
        }
        
        public void GetRoomsAsync(object userState) {
            if ((this.onBeginGetRoomsDelegate == null)) {
                this.onBeginGetRoomsDelegate = new BeginOperationDelegate(this.OnBeginGetRooms);
            }
            if ((this.onEndGetRoomsDelegate == null)) {
                this.onEndGetRoomsDelegate = new EndOperationDelegate(this.OnEndGetRooms);
            }
            if ((this.onGetRoomsCompletedDelegate == null)) {
                this.onGetRoomsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRoomsCompleted);
            }
            base.InvokeAsync(this.onBeginGetRoomsDelegate, null, this.onEndGetRoomsDelegate, this.onGetRoomsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ContactMaster.EnterpriseService.IContactService.BeginGetSchools(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSchools(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIEducation> ContactMaster.EnterpriseService.IContactService.EndGetSchools(System.IAsyncResult result) {
            return base.Channel.EndGetSchools(result);
        }
        
        private System.IAsyncResult OnBeginGetSchools(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((ContactMaster.EnterpriseService.IContactService)(this)).BeginGetSchools(callback, asyncState);
        }
        
        private object[] OnEndGetSchools(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIEducation> retVal = ((ContactMaster.EnterpriseService.IContactService)(this)).EndGetSchools(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSchoolsCompleted(object state) {
            if ((this.GetSchoolsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSchoolsCompleted(this, new GetSchoolsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSchoolsAsync() {
            this.GetSchoolsAsync(null);
        }
        
        public void GetSchoolsAsync(object userState) {
            if ((this.onBeginGetSchoolsDelegate == null)) {
                this.onBeginGetSchoolsDelegate = new BeginOperationDelegate(this.OnBeginGetSchools);
            }
            if ((this.onEndGetSchoolsDelegate == null)) {
                this.onEndGetSchoolsDelegate = new EndOperationDelegate(this.OnEndGetSchools);
            }
            if ((this.onGetSchoolsCompletedDelegate == null)) {
                this.onGetSchoolsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSchoolsCompleted);
            }
            base.InvokeAsync(this.onBeginGetSchoolsDelegate, null, this.onEndGetSchoolsDelegate, this.onGetSchoolsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ContactMaster.EnterpriseService.IContactService.BeginGetStaffAdditions(int staffId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetStaffAdditions(staffId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ContactMaster.EnterpriseService.USLIUserAddition ContactMaster.EnterpriseService.IContactService.EndGetStaffAdditions(System.IAsyncResult result) {
            return base.Channel.EndGetStaffAdditions(result);
        }
        
        private System.IAsyncResult OnBeginGetStaffAdditions(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int staffId = ((int)(inValues[0]));
            return ((ContactMaster.EnterpriseService.IContactService)(this)).BeginGetStaffAdditions(staffId, callback, asyncState);
        }
        
        private object[] OnEndGetStaffAdditions(System.IAsyncResult result) {
            ContactMaster.EnterpriseService.USLIUserAddition retVal = ((ContactMaster.EnterpriseService.IContactService)(this)).EndGetStaffAdditions(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetStaffAdditionsCompleted(object state) {
            if ((this.GetStaffAdditionsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetStaffAdditionsCompleted(this, new GetStaffAdditionsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetStaffAdditionsAsync(int staffId) {
            this.GetStaffAdditionsAsync(staffId, null);
        }
        
        public void GetStaffAdditionsAsync(int staffId, object userState) {
            if ((this.onBeginGetStaffAdditionsDelegate == null)) {
                this.onBeginGetStaffAdditionsDelegate = new BeginOperationDelegate(this.OnBeginGetStaffAdditions);
            }
            if ((this.onEndGetStaffAdditionsDelegate == null)) {
                this.onEndGetStaffAdditionsDelegate = new EndOperationDelegate(this.OnEndGetStaffAdditions);
            }
            if ((this.onGetStaffAdditionsCompletedDelegate == null)) {
                this.onGetStaffAdditionsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetStaffAdditionsCompleted);
            }
            base.InvokeAsync(this.onBeginGetStaffAdditionsDelegate, new object[] {
                        staffId}, this.onEndGetStaffAdditionsDelegate, this.onGetStaffAdditionsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ContactMaster.EnterpriseService.IContactService.BeginGetStates(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetStates(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USState> ContactMaster.EnterpriseService.IContactService.EndGetStates(System.IAsyncResult result) {
            return base.Channel.EndGetStates(result);
        }
        
        private System.IAsyncResult OnBeginGetStates(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((ContactMaster.EnterpriseService.IContactService)(this)).BeginGetStates(callback, asyncState);
        }
        
        private object[] OnEndGetStates(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USState> retVal = ((ContactMaster.EnterpriseService.IContactService)(this)).EndGetStates(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetStatesCompleted(object state) {
            if ((this.GetStatesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetStatesCompleted(this, new GetStatesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetStatesAsync() {
            this.GetStatesAsync(null);
        }
        
        public void GetStatesAsync(object userState) {
            if ((this.onBeginGetStatesDelegate == null)) {
                this.onBeginGetStatesDelegate = new BeginOperationDelegate(this.OnBeginGetStates);
            }
            if ((this.onEndGetStatesDelegate == null)) {
                this.onEndGetStatesDelegate = new EndOperationDelegate(this.OnEndGetStates);
            }
            if ((this.onGetStatesCompletedDelegate == null)) {
                this.onGetStatesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetStatesCompleted);
            }
            base.InvokeAsync(this.onBeginGetStatesDelegate, null, this.onEndGetStatesDelegate, this.onGetStatesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ContactMaster.EnterpriseService.IContactService.BeginGetTeams(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTeams(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLITeam> ContactMaster.EnterpriseService.IContactService.EndGetTeams(System.IAsyncResult result) {
            return base.Channel.EndGetTeams(result);
        }
        
        private System.IAsyncResult OnBeginGetTeams(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((ContactMaster.EnterpriseService.IContactService)(this)).BeginGetTeams(callback, asyncState);
        }
        
        private object[] OnEndGetTeams(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLITeam> retVal = ((ContactMaster.EnterpriseService.IContactService)(this)).EndGetTeams(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTeamsCompleted(object state) {
            if ((this.GetTeamsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTeamsCompleted(this, new GetTeamsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTeamsAsync() {
            this.GetTeamsAsync(null);
        }
        
        public void GetTeamsAsync(object userState) {
            if ((this.onBeginGetTeamsDelegate == null)) {
                this.onBeginGetTeamsDelegate = new BeginOperationDelegate(this.OnBeginGetTeams);
            }
            if ((this.onEndGetTeamsDelegate == null)) {
                this.onEndGetTeamsDelegate = new EndOperationDelegate(this.OnEndGetTeams);
            }
            if ((this.onGetTeamsCompletedDelegate == null)) {
                this.onGetTeamsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTeamsCompleted);
            }
            base.InvokeAsync(this.onBeginGetTeamsDelegate, null, this.onEndGetTeamsDelegate, this.onGetTeamsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ContactMaster.EnterpriseService.IContactService.BeginGetTeamStaffs(int teamId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTeamStaffs(teamId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIUser> ContactMaster.EnterpriseService.IContactService.EndGetTeamStaffs(System.IAsyncResult result) {
            return base.Channel.EndGetTeamStaffs(result);
        }
        
        private System.IAsyncResult OnBeginGetTeamStaffs(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int teamId = ((int)(inValues[0]));
            return ((ContactMaster.EnterpriseService.IContactService)(this)).BeginGetTeamStaffs(teamId, callback, asyncState);
        }
        
        private object[] OnEndGetTeamStaffs(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIUser> retVal = ((ContactMaster.EnterpriseService.IContactService)(this)).EndGetTeamStaffs(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTeamStaffsCompleted(object state) {
            if ((this.GetTeamStaffsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTeamStaffsCompleted(this, new GetTeamStaffsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTeamStaffsAsync(int teamId) {
            this.GetTeamStaffsAsync(teamId, null);
        }
        
        public void GetTeamStaffsAsync(int teamId, object userState) {
            if ((this.onBeginGetTeamStaffsDelegate == null)) {
                this.onBeginGetTeamStaffsDelegate = new BeginOperationDelegate(this.OnBeginGetTeamStaffs);
            }
            if ((this.onEndGetTeamStaffsDelegate == null)) {
                this.onEndGetTeamStaffsDelegate = new EndOperationDelegate(this.OnEndGetTeamStaffs);
            }
            if ((this.onGetTeamStaffsCompletedDelegate == null)) {
                this.onGetTeamStaffsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTeamStaffsCompleted);
            }
            base.InvokeAsync(this.onBeginGetTeamStaffsDelegate, new object[] {
                        teamId}, this.onEndGetTeamStaffsDelegate, this.onGetTeamStaffsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ContactMaster.EnterpriseService.IContactService.BeginGetTitles(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTitles(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLITitle> ContactMaster.EnterpriseService.IContactService.EndGetTitles(System.IAsyncResult result) {
            return base.Channel.EndGetTitles(result);
        }
        
        private System.IAsyncResult OnBeginGetTitles(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((ContactMaster.EnterpriseService.IContactService)(this)).BeginGetTitles(callback, asyncState);
        }
        
        private object[] OnEndGetTitles(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLITitle> retVal = ((ContactMaster.EnterpriseService.IContactService)(this)).EndGetTitles(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTitlesCompleted(object state) {
            if ((this.GetTitlesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTitlesCompleted(this, new GetTitlesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTitlesAsync() {
            this.GetTitlesAsync(null);
        }
        
        public void GetTitlesAsync(object userState) {
            if ((this.onBeginGetTitlesDelegate == null)) {
                this.onBeginGetTitlesDelegate = new BeginOperationDelegate(this.OnBeginGetTitles);
            }
            if ((this.onEndGetTitlesDelegate == null)) {
                this.onEndGetTitlesDelegate = new EndOperationDelegate(this.OnEndGetTitles);
            }
            if ((this.onGetTitlesCompletedDelegate == null)) {
                this.onGetTitlesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTitlesCompleted);
            }
            base.InvokeAsync(this.onBeginGetTitlesDelegate, null, this.onEndGetTitlesDelegate, this.onGetTitlesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ContactMaster.EnterpriseService.IContactService.BeginGetUser(int userID, int workstationid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUser(userID, workstationid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ContactMaster.EnterpriseService.USLIUser ContactMaster.EnterpriseService.IContactService.EndGetUser(System.IAsyncResult result) {
            return base.Channel.EndGetUser(result);
        }
        
        private System.IAsyncResult OnBeginGetUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int userID = ((int)(inValues[0]));
            int workstationid = ((int)(inValues[1]));
            return ((ContactMaster.EnterpriseService.IContactService)(this)).BeginGetUser(userID, workstationid, callback, asyncState);
        }
        
        private object[] OnEndGetUser(System.IAsyncResult result) {
            ContactMaster.EnterpriseService.USLIUser retVal = ((ContactMaster.EnterpriseService.IContactService)(this)).EndGetUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUserCompleted(object state) {
            if ((this.GetUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUserCompleted(this, new GetUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUserAsync(int userID, int workstationid) {
            this.GetUserAsync(userID, workstationid, null);
        }
        
        public void GetUserAsync(int userID, int workstationid, object userState) {
            if ((this.onBeginGetUserDelegate == null)) {
                this.onBeginGetUserDelegate = new BeginOperationDelegate(this.OnBeginGetUser);
            }
            if ((this.onEndGetUserDelegate == null)) {
                this.onEndGetUserDelegate = new EndOperationDelegate(this.OnEndGetUser);
            }
            if ((this.onGetUserCompletedDelegate == null)) {
                this.onGetUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUserCompleted);
            }
            base.InvokeAsync(this.onBeginGetUserDelegate, new object[] {
                        userID,
                        workstationid}, this.onEndGetUserDelegate, this.onGetUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ContactMaster.EnterpriseService.IContactService.BeginGetUserFifties(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUserFifties(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.User50> ContactMaster.EnterpriseService.IContactService.EndGetUserFifties(System.IAsyncResult result) {
            return base.Channel.EndGetUserFifties(result);
        }
        
        private System.IAsyncResult OnBeginGetUserFifties(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((ContactMaster.EnterpriseService.IContactService)(this)).BeginGetUserFifties(callback, asyncState);
        }
        
        private object[] OnEndGetUserFifties(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.User50> retVal = ((ContactMaster.EnterpriseService.IContactService)(this)).EndGetUserFifties(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUserFiftiesCompleted(object state) {
            if ((this.GetUserFiftiesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUserFiftiesCompleted(this, new GetUserFiftiesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUserFiftiesAsync() {
            this.GetUserFiftiesAsync(null);
        }
        
        public void GetUserFiftiesAsync(object userState) {
            if ((this.onBeginGetUserFiftiesDelegate == null)) {
                this.onBeginGetUserFiftiesDelegate = new BeginOperationDelegate(this.OnBeginGetUserFifties);
            }
            if ((this.onEndGetUserFiftiesDelegate == null)) {
                this.onEndGetUserFiftiesDelegate = new EndOperationDelegate(this.OnEndGetUserFifties);
            }
            if ((this.onGetUserFiftiesCompletedDelegate == null)) {
                this.onGetUserFiftiesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUserFiftiesCompleted);
            }
            base.InvokeAsync(this.onBeginGetUserFiftiesDelegate, null, this.onEndGetUserFiftiesDelegate, this.onGetUserFiftiesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ContactMaster.EnterpriseService.IContactService.BeginGetUserFiftyPickerView(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUserFiftyPickerView(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ContactMaster.EnterpriseService.Customer50ViewModel ContactMaster.EnterpriseService.IContactService.EndGetUserFiftyPickerView(System.IAsyncResult result) {
            return base.Channel.EndGetUserFiftyPickerView(result);
        }
        
        private System.IAsyncResult OnBeginGetUserFiftyPickerView(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((ContactMaster.EnterpriseService.IContactService)(this)).BeginGetUserFiftyPickerView(callback, asyncState);
        }
        
        private object[] OnEndGetUserFiftyPickerView(System.IAsyncResult result) {
            ContactMaster.EnterpriseService.Customer50ViewModel retVal = ((ContactMaster.EnterpriseService.IContactService)(this)).EndGetUserFiftyPickerView(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUserFiftyPickerViewCompleted(object state) {
            if ((this.GetUserFiftyPickerViewCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUserFiftyPickerViewCompleted(this, new GetUserFiftyPickerViewCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUserFiftyPickerViewAsync() {
            this.GetUserFiftyPickerViewAsync(null);
        }
        
        public void GetUserFiftyPickerViewAsync(object userState) {
            if ((this.onBeginGetUserFiftyPickerViewDelegate == null)) {
                this.onBeginGetUserFiftyPickerViewDelegate = new BeginOperationDelegate(this.OnBeginGetUserFiftyPickerView);
            }
            if ((this.onEndGetUserFiftyPickerViewDelegate == null)) {
                this.onEndGetUserFiftyPickerViewDelegate = new EndOperationDelegate(this.OnEndGetUserFiftyPickerView);
            }
            if ((this.onGetUserFiftyPickerViewCompletedDelegate == null)) {
                this.onGetUserFiftyPickerViewCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUserFiftyPickerViewCompleted);
            }
            base.InvokeAsync(this.onBeginGetUserFiftyPickerViewDelegate, null, this.onEndGetUserFiftyPickerViewDelegate, this.onGetUserFiftyPickerViewCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ContactMaster.EnterpriseService.IContactService.BeginGetUsers(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUsers(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIUsers> ContactMaster.EnterpriseService.IContactService.EndGetUsers(System.IAsyncResult result) {
            return base.Channel.EndGetUsers(result);
        }
        
        private System.IAsyncResult OnBeginGetUsers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((ContactMaster.EnterpriseService.IContactService)(this)).BeginGetUsers(callback, asyncState);
        }
        
        private object[] OnEndGetUsers(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIUsers> retVal = ((ContactMaster.EnterpriseService.IContactService)(this)).EndGetUsers(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUsersCompleted(object state) {
            if ((this.GetUsersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUsersCompleted(this, new GetUsersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUsersAsync() {
            this.GetUsersAsync(null);
        }
        
        public void GetUsersAsync(object userState) {
            if ((this.onBeginGetUsersDelegate == null)) {
                this.onBeginGetUsersDelegate = new BeginOperationDelegate(this.OnBeginGetUsers);
            }
            if ((this.onEndGetUsersDelegate == null)) {
                this.onEndGetUsersDelegate = new EndOperationDelegate(this.OnEndGetUsers);
            }
            if ((this.onGetUsersCompletedDelegate == null)) {
                this.onGetUsersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUsersCompleted);
            }
            base.InvokeAsync(this.onBeginGetUsersDelegate, null, this.onEndGetUsersDelegate, this.onGetUsersCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ContactMaster.EnterpriseService.IContactService.BeginGetWebRegionalContact(int userID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetWebRegionalContact(userID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ContactMaster.EnterpriseService.USLIUser ContactMaster.EnterpriseService.IContactService.EndGetWebRegionalContact(System.IAsyncResult result) {
            return base.Channel.EndGetWebRegionalContact(result);
        }
        
        private System.IAsyncResult OnBeginGetWebRegionalContact(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int userID = ((int)(inValues[0]));
            return ((ContactMaster.EnterpriseService.IContactService)(this)).BeginGetWebRegionalContact(userID, callback, asyncState);
        }
        
        private object[] OnEndGetWebRegionalContact(System.IAsyncResult result) {
            ContactMaster.EnterpriseService.USLIUser retVal = ((ContactMaster.EnterpriseService.IContactService)(this)).EndGetWebRegionalContact(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetWebRegionalContactCompleted(object state) {
            if ((this.GetWebRegionalContactCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetWebRegionalContactCompleted(this, new GetWebRegionalContactCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetWebRegionalContactAsync(int userID) {
            this.GetWebRegionalContactAsync(userID, null);
        }
        
        public void GetWebRegionalContactAsync(int userID, object userState) {
            if ((this.onBeginGetWebRegionalContactDelegate == null)) {
                this.onBeginGetWebRegionalContactDelegate = new BeginOperationDelegate(this.OnBeginGetWebRegionalContact);
            }
            if ((this.onEndGetWebRegionalContactDelegate == null)) {
                this.onEndGetWebRegionalContactDelegate = new EndOperationDelegate(this.OnEndGetWebRegionalContact);
            }
            if ((this.onGetWebRegionalContactCompletedDelegate == null)) {
                this.onGetWebRegionalContactCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetWebRegionalContactCompleted);
            }
            base.InvokeAsync(this.onBeginGetWebRegionalContactDelegate, new object[] {
                        userID}, this.onEndGetWebRegionalContactDelegate, this.onGetWebRegionalContactCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ContactMaster.EnterpriseService.IContactService.BeginGetWebRegionalContacts(int teamId, string statecode, int isUA, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetWebRegionalContacts(teamId, statecode, isUA, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIUser> ContactMaster.EnterpriseService.IContactService.EndGetWebRegionalContacts(System.IAsyncResult result) {
            return base.Channel.EndGetWebRegionalContacts(result);
        }
        
        private System.IAsyncResult OnBeginGetWebRegionalContacts(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int teamId = ((int)(inValues[0]));
            string statecode = ((string)(inValues[1]));
            int isUA = ((int)(inValues[2]));
            return ((ContactMaster.EnterpriseService.IContactService)(this)).BeginGetWebRegionalContacts(teamId, statecode, isUA, callback, asyncState);
        }
        
        private object[] OnEndGetWebRegionalContacts(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIUser> retVal = ((ContactMaster.EnterpriseService.IContactService)(this)).EndGetWebRegionalContacts(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetWebRegionalContactsCompleted(object state) {
            if ((this.GetWebRegionalContactsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetWebRegionalContactsCompleted(this, new GetWebRegionalContactsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetWebRegionalContactsAsync(int teamId, string statecode, int isUA) {
            this.GetWebRegionalContactsAsync(teamId, statecode, isUA, null);
        }
        
        public void GetWebRegionalContactsAsync(int teamId, string statecode, int isUA, object userState) {
            if ((this.onBeginGetWebRegionalContactsDelegate == null)) {
                this.onBeginGetWebRegionalContactsDelegate = new BeginOperationDelegate(this.OnBeginGetWebRegionalContacts);
            }
            if ((this.onEndGetWebRegionalContactsDelegate == null)) {
                this.onEndGetWebRegionalContactsDelegate = new EndOperationDelegate(this.OnEndGetWebRegionalContacts);
            }
            if ((this.onGetWebRegionalContactsCompletedDelegate == null)) {
                this.onGetWebRegionalContactsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetWebRegionalContactsCompleted);
            }
            base.InvokeAsync(this.onBeginGetWebRegionalContactsDelegate, new object[] {
                        teamId,
                        statecode,
                        isUA}, this.onEndGetWebRegionalContactsDelegate, this.onGetWebRegionalContactsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ContactMaster.EnterpriseService.IContactService.BeginGetWebRegionalTeams(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetWebRegionalTeams(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLITeam> ContactMaster.EnterpriseService.IContactService.EndGetWebRegionalTeams(System.IAsyncResult result) {
            return base.Channel.EndGetWebRegionalTeams(result);
        }
        
        private System.IAsyncResult OnBeginGetWebRegionalTeams(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((ContactMaster.EnterpriseService.IContactService)(this)).BeginGetWebRegionalTeams(callback, asyncState);
        }
        
        private object[] OnEndGetWebRegionalTeams(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLITeam> retVal = ((ContactMaster.EnterpriseService.IContactService)(this)).EndGetWebRegionalTeams(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetWebRegionalTeamsCompleted(object state) {
            if ((this.GetWebRegionalTeamsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetWebRegionalTeamsCompleted(this, new GetWebRegionalTeamsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetWebRegionalTeamsAsync() {
            this.GetWebRegionalTeamsAsync(null);
        }
        
        public void GetWebRegionalTeamsAsync(object userState) {
            if ((this.onBeginGetWebRegionalTeamsDelegate == null)) {
                this.onBeginGetWebRegionalTeamsDelegate = new BeginOperationDelegate(this.OnBeginGetWebRegionalTeams);
            }
            if ((this.onEndGetWebRegionalTeamsDelegate == null)) {
                this.onEndGetWebRegionalTeamsDelegate = new EndOperationDelegate(this.OnEndGetWebRegionalTeams);
            }
            if ((this.onGetWebRegionalTeamsCompletedDelegate == null)) {
                this.onGetWebRegionalTeamsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetWebRegionalTeamsCompleted);
            }
            base.InvokeAsync(this.onBeginGetWebRegionalTeamsDelegate, null, this.onEndGetWebRegionalTeamsDelegate, this.onGetWebRegionalTeamsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ContactMaster.EnterpriseService.IContactService.BeginGetWebTeams(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetWebTeams(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLITeam> ContactMaster.EnterpriseService.IContactService.EndGetWebTeams(System.IAsyncResult result) {
            return base.Channel.EndGetWebTeams(result);
        }
        
        private System.IAsyncResult OnBeginGetWebTeams(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((ContactMaster.EnterpriseService.IContactService)(this)).BeginGetWebTeams(callback, asyncState);
        }
        
        private object[] OnEndGetWebTeams(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLITeam> retVal = ((ContactMaster.EnterpriseService.IContactService)(this)).EndGetWebTeams(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetWebTeamsCompleted(object state) {
            if ((this.GetWebTeamsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetWebTeamsCompleted(this, new GetWebTeamsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetWebTeamsAsync() {
            this.GetWebTeamsAsync(null);
        }
        
        public void GetWebTeamsAsync(object userState) {
            if ((this.onBeginGetWebTeamsDelegate == null)) {
                this.onBeginGetWebTeamsDelegate = new BeginOperationDelegate(this.OnBeginGetWebTeams);
            }
            if ((this.onEndGetWebTeamsDelegate == null)) {
                this.onEndGetWebTeamsDelegate = new EndOperationDelegate(this.OnEndGetWebTeams);
            }
            if ((this.onGetWebTeamsCompletedDelegate == null)) {
                this.onGetWebTeamsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetWebTeamsCompleted);
            }
            base.InvokeAsync(this.onBeginGetWebTeamsDelegate, null, this.onEndGetWebTeamsDelegate, this.onGetWebTeamsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ContactMaster.EnterpriseService.IContactService.BeginGetWebTeamStaffs(int teamId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetWebTeamStaffs(teamId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIUser> ContactMaster.EnterpriseService.IContactService.EndGetWebTeamStaffs(System.IAsyncResult result) {
            return base.Channel.EndGetWebTeamStaffs(result);
        }
        
        private System.IAsyncResult OnBeginGetWebTeamStaffs(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int teamId = ((int)(inValues[0]));
            return ((ContactMaster.EnterpriseService.IContactService)(this)).BeginGetWebTeamStaffs(teamId, callback, asyncState);
        }
        
        private object[] OnEndGetWebTeamStaffs(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIUser> retVal = ((ContactMaster.EnterpriseService.IContactService)(this)).EndGetWebTeamStaffs(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetWebTeamStaffsCompleted(object state) {
            if ((this.GetWebTeamStaffsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetWebTeamStaffsCompleted(this, new GetWebTeamStaffsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetWebTeamStaffsAsync(int teamId) {
            this.GetWebTeamStaffsAsync(teamId, null);
        }
        
        public void GetWebTeamStaffsAsync(int teamId, object userState) {
            if ((this.onBeginGetWebTeamStaffsDelegate == null)) {
                this.onBeginGetWebTeamStaffsDelegate = new BeginOperationDelegate(this.OnBeginGetWebTeamStaffs);
            }
            if ((this.onEndGetWebTeamStaffsDelegate == null)) {
                this.onEndGetWebTeamStaffsDelegate = new EndOperationDelegate(this.OnEndGetWebTeamStaffs);
            }
            if ((this.onGetWebTeamStaffsCompletedDelegate == null)) {
                this.onGetWebTeamStaffsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetWebTeamStaffsCompleted);
            }
            base.InvokeAsync(this.onBeginGetWebTeamStaffsDelegate, new object[] {
                        teamId}, this.onEndGetWebTeamStaffsDelegate, this.onGetWebTeamStaffsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ContactMaster.EnterpriseService.IContactService.BeginSaveStaff(ContactMaster.EnterpriseService.USLIUser staff, ContactMaster.EnterpriseService.USLIUserAddition stfAdition, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveStaff(staff, stfAdition, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void ContactMaster.EnterpriseService.IContactService.EndSaveStaff(System.IAsyncResult result) {
            base.Channel.EndSaveStaff(result);
        }
        
        private System.IAsyncResult OnBeginSaveStaff(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ContactMaster.EnterpriseService.USLIUser staff = ((ContactMaster.EnterpriseService.USLIUser)(inValues[0]));
            ContactMaster.EnterpriseService.USLIUserAddition stfAdition = ((ContactMaster.EnterpriseService.USLIUserAddition)(inValues[1]));
            return ((ContactMaster.EnterpriseService.IContactService)(this)).BeginSaveStaff(staff, stfAdition, callback, asyncState);
        }
        
        private object[] OnEndSaveStaff(System.IAsyncResult result) {
            ((ContactMaster.EnterpriseService.IContactService)(this)).EndSaveStaff(result);
            return null;
        }
        
        private void OnSaveStaffCompleted(object state) {
            if ((this.SaveStaffCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveStaffCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveStaffAsync(ContactMaster.EnterpriseService.USLIUser staff, ContactMaster.EnterpriseService.USLIUserAddition stfAdition) {
            this.SaveStaffAsync(staff, stfAdition, null);
        }
        
        public void SaveStaffAsync(ContactMaster.EnterpriseService.USLIUser staff, ContactMaster.EnterpriseService.USLIUserAddition stfAdition, object userState) {
            if ((this.onBeginSaveStaffDelegate == null)) {
                this.onBeginSaveStaffDelegate = new BeginOperationDelegate(this.OnBeginSaveStaff);
            }
            if ((this.onEndSaveStaffDelegate == null)) {
                this.onEndSaveStaffDelegate = new EndOperationDelegate(this.OnEndSaveStaff);
            }
            if ((this.onSaveStaffCompletedDelegate == null)) {
                this.onSaveStaffCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveStaffCompleted);
            }
            base.InvokeAsync(this.onBeginSaveStaffDelegate, new object[] {
                        staff,
                        stfAdition}, this.onEndSaveStaffDelegate, this.onSaveStaffCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ContactMaster.EnterpriseService.IContactService.BeginSaveUserFifties(ContactMaster.EnterpriseService.User50 user, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveUserFifties(user, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void ContactMaster.EnterpriseService.IContactService.EndSaveUserFifties(System.IAsyncResult result) {
            base.Channel.EndSaveUserFifties(result);
        }
        
        private System.IAsyncResult OnBeginSaveUserFifties(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ContactMaster.EnterpriseService.User50 user = ((ContactMaster.EnterpriseService.User50)(inValues[0]));
            return ((ContactMaster.EnterpriseService.IContactService)(this)).BeginSaveUserFifties(user, callback, asyncState);
        }
        
        private object[] OnEndSaveUserFifties(System.IAsyncResult result) {
            ((ContactMaster.EnterpriseService.IContactService)(this)).EndSaveUserFifties(result);
            return null;
        }
        
        private void OnSaveUserFiftiesCompleted(object state) {
            if ((this.SaveUserFiftiesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveUserFiftiesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveUserFiftiesAsync(ContactMaster.EnterpriseService.User50 user) {
            this.SaveUserFiftiesAsync(user, null);
        }
        
        public void SaveUserFiftiesAsync(ContactMaster.EnterpriseService.User50 user, object userState) {
            if ((this.onBeginSaveUserFiftiesDelegate == null)) {
                this.onBeginSaveUserFiftiesDelegate = new BeginOperationDelegate(this.OnBeginSaveUserFifties);
            }
            if ((this.onEndSaveUserFiftiesDelegate == null)) {
                this.onEndSaveUserFiftiesDelegate = new EndOperationDelegate(this.OnEndSaveUserFifties);
            }
            if ((this.onSaveUserFiftiesCompletedDelegate == null)) {
                this.onSaveUserFiftiesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveUserFiftiesCompleted);
            }
            base.InvokeAsync(this.onBeginSaveUserFiftiesDelegate, new object[] {
                        user}, this.onEndSaveUserFiftiesDelegate, this.onSaveUserFiftiesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ContactMaster.EnterpriseService.IContactService.BeginSaveUSLICert(int id, string name, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveUSLICert(id, name, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void ContactMaster.EnterpriseService.IContactService.EndSaveUSLICert(System.IAsyncResult result) {
            base.Channel.EndSaveUSLICert(result);
        }
        
        private System.IAsyncResult OnBeginSaveUSLICert(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            string name = ((string)(inValues[1]));
            return ((ContactMaster.EnterpriseService.IContactService)(this)).BeginSaveUSLICert(id, name, callback, asyncState);
        }
        
        private object[] OnEndSaveUSLICert(System.IAsyncResult result) {
            ((ContactMaster.EnterpriseService.IContactService)(this)).EndSaveUSLICert(result);
            return null;
        }
        
        private void OnSaveUSLICertCompleted(object state) {
            if ((this.SaveUSLICertCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveUSLICertCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveUSLICertAsync(int id, string name) {
            this.SaveUSLICertAsync(id, name, null);
        }
        
        public void SaveUSLICertAsync(int id, string name, object userState) {
            if ((this.onBeginSaveUSLICertDelegate == null)) {
                this.onBeginSaveUSLICertDelegate = new BeginOperationDelegate(this.OnBeginSaveUSLICert);
            }
            if ((this.onEndSaveUSLICertDelegate == null)) {
                this.onEndSaveUSLICertDelegate = new EndOperationDelegate(this.OnEndSaveUSLICert);
            }
            if ((this.onSaveUSLICertCompletedDelegate == null)) {
                this.onSaveUSLICertCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveUSLICertCompleted);
            }
            base.InvokeAsync(this.onBeginSaveUSLICertDelegate, new object[] {
                        id,
                        name}, this.onEndSaveUSLICertDelegate, this.onSaveUSLICertCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ContactMaster.EnterpriseService.IContactService.BeginSaveUSLIEducation(ContactMaster.EnterpriseService.USLIEducation ed, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveUSLIEducation(ed, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void ContactMaster.EnterpriseService.IContactService.EndSaveUSLIEducation(System.IAsyncResult result) {
            base.Channel.EndSaveUSLIEducation(result);
        }
        
        private System.IAsyncResult OnBeginSaveUSLIEducation(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ContactMaster.EnterpriseService.USLIEducation ed = ((ContactMaster.EnterpriseService.USLIEducation)(inValues[0]));
            return ((ContactMaster.EnterpriseService.IContactService)(this)).BeginSaveUSLIEducation(ed, callback, asyncState);
        }
        
        private object[] OnEndSaveUSLIEducation(System.IAsyncResult result) {
            ((ContactMaster.EnterpriseService.IContactService)(this)).EndSaveUSLIEducation(result);
            return null;
        }
        
        private void OnSaveUSLIEducationCompleted(object state) {
            if ((this.SaveUSLIEducationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveUSLIEducationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveUSLIEducationAsync(ContactMaster.EnterpriseService.USLIEducation ed) {
            this.SaveUSLIEducationAsync(ed, null);
        }
        
        public void SaveUSLIEducationAsync(ContactMaster.EnterpriseService.USLIEducation ed, object userState) {
            if ((this.onBeginSaveUSLIEducationDelegate == null)) {
                this.onBeginSaveUSLIEducationDelegate = new BeginOperationDelegate(this.OnBeginSaveUSLIEducation);
            }
            if ((this.onEndSaveUSLIEducationDelegate == null)) {
                this.onEndSaveUSLIEducationDelegate = new EndOperationDelegate(this.OnEndSaveUSLIEducation);
            }
            if ((this.onSaveUSLIEducationCompletedDelegate == null)) {
                this.onSaveUSLIEducationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveUSLIEducationCompleted);
            }
            base.InvokeAsync(this.onBeginSaveUSLIEducationDelegate, new object[] {
                        ed}, this.onEndSaveUSLIEducationDelegate, this.onSaveUSLIEducationCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ContactMaster.EnterpriseService.IContactService.BeginSaveUSLITitle(int id, string name, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveUSLITitle(id, name, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void ContactMaster.EnterpriseService.IContactService.EndSaveUSLITitle(System.IAsyncResult result) {
            base.Channel.EndSaveUSLITitle(result);
        }
        
        private System.IAsyncResult OnBeginSaveUSLITitle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int id = ((int)(inValues[0]));
            string name = ((string)(inValues[1]));
            return ((ContactMaster.EnterpriseService.IContactService)(this)).BeginSaveUSLITitle(id, name, callback, asyncState);
        }
        
        private object[] OnEndSaveUSLITitle(System.IAsyncResult result) {
            ((ContactMaster.EnterpriseService.IContactService)(this)).EndSaveUSLITitle(result);
            return null;
        }
        
        private void OnSaveUSLITitleCompleted(object state) {
            if ((this.SaveUSLITitleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveUSLITitleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveUSLITitleAsync(int id, string name) {
            this.SaveUSLITitleAsync(id, name, null);
        }
        
        public void SaveUSLITitleAsync(int id, string name, object userState) {
            if ((this.onBeginSaveUSLITitleDelegate == null)) {
                this.onBeginSaveUSLITitleDelegate = new BeginOperationDelegate(this.OnBeginSaveUSLITitle);
            }
            if ((this.onEndSaveUSLITitleDelegate == null)) {
                this.onEndSaveUSLITitleDelegate = new EndOperationDelegate(this.OnEndSaveUSLITitle);
            }
            if ((this.onSaveUSLITitleCompletedDelegate == null)) {
                this.onSaveUSLITitleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveUSLITitleCompleted);
            }
            base.InvokeAsync(this.onBeginSaveUSLITitleDelegate, new object[] {
                        id,
                        name}, this.onEndSaveUSLITitleDelegate, this.onSaveUSLITitleCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ContactMaster.EnterpriseService.IContactService.BeginSaveWebRegionalContact(int DeptID, string state, string ListSelected, string isUA, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveWebRegionalContact(DeptID, state, ListSelected, isUA, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool ContactMaster.EnterpriseService.IContactService.EndSaveWebRegionalContact(System.IAsyncResult result) {
            return base.Channel.EndSaveWebRegionalContact(result);
        }
        
        private System.IAsyncResult OnBeginSaveWebRegionalContact(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int DeptID = ((int)(inValues[0]));
            string state = ((string)(inValues[1]));
            string ListSelected = ((string)(inValues[2]));
            string isUA = ((string)(inValues[3]));
            return ((ContactMaster.EnterpriseService.IContactService)(this)).BeginSaveWebRegionalContact(DeptID, state, ListSelected, isUA, callback, asyncState);
        }
        
        private object[] OnEndSaveWebRegionalContact(System.IAsyncResult result) {
            bool retVal = ((ContactMaster.EnterpriseService.IContactService)(this)).EndSaveWebRegionalContact(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveWebRegionalContactCompleted(object state) {
            if ((this.SaveWebRegionalContactCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveWebRegionalContactCompleted(this, new SaveWebRegionalContactCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveWebRegionalContactAsync(int DeptID, string state, string ListSelected, string isUA) {
            this.SaveWebRegionalContactAsync(DeptID, state, ListSelected, isUA, null);
        }
        
        public void SaveWebRegionalContactAsync(int DeptID, string state, string ListSelected, string isUA, object userState) {
            if ((this.onBeginSaveWebRegionalContactDelegate == null)) {
                this.onBeginSaveWebRegionalContactDelegate = new BeginOperationDelegate(this.OnBeginSaveWebRegionalContact);
            }
            if ((this.onEndSaveWebRegionalContactDelegate == null)) {
                this.onEndSaveWebRegionalContactDelegate = new EndOperationDelegate(this.OnEndSaveWebRegionalContact);
            }
            if ((this.onSaveWebRegionalContactCompletedDelegate == null)) {
                this.onSaveWebRegionalContactCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveWebRegionalContactCompleted);
            }
            base.InvokeAsync(this.onBeginSaveWebRegionalContactDelegate, new object[] {
                        DeptID,
                        state,
                        ListSelected,
                        isUA}, this.onEndSaveWebRegionalContactDelegate, this.onSaveWebRegionalContactCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ContactMaster.EnterpriseService.IContactService.BeginSearchUsers(string search, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSearchUsers(search, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIUsers> ContactMaster.EnterpriseService.IContactService.EndSearchUsers(System.IAsyncResult result) {
            return base.Channel.EndSearchUsers(result);
        }
        
        private System.IAsyncResult OnBeginSearchUsers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string search = ((string)(inValues[0]));
            return ((ContactMaster.EnterpriseService.IContactService)(this)).BeginSearchUsers(search, callback, asyncState);
        }
        
        private object[] OnEndSearchUsers(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIUsers> retVal = ((ContactMaster.EnterpriseService.IContactService)(this)).EndSearchUsers(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSearchUsersCompleted(object state) {
            if ((this.SearchUsersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SearchUsersCompleted(this, new SearchUsersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SearchUsersAsync(string search) {
            this.SearchUsersAsync(search, null);
        }
        
        public void SearchUsersAsync(string search, object userState) {
            if ((this.onBeginSearchUsersDelegate == null)) {
                this.onBeginSearchUsersDelegate = new BeginOperationDelegate(this.OnBeginSearchUsers);
            }
            if ((this.onEndSearchUsersDelegate == null)) {
                this.onEndSearchUsersDelegate = new EndOperationDelegate(this.OnEndSearchUsers);
            }
            if ((this.onSearchUsersCompletedDelegate == null)) {
                this.onSearchUsersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSearchUsersCompleted);
            }
            base.InvokeAsync(this.onBeginSearchUsersDelegate, new object[] {
                        search}, this.onEndSearchUsersDelegate, this.onSearchUsersCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ContactMaster.EnterpriseService.IContactService.BeginGetContactTypes(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetContactTypes(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIContactType> ContactMaster.EnterpriseService.IContactService.EndGetContactTypes(System.IAsyncResult result) {
            return base.Channel.EndGetContactTypes(result);
        }
        
        private System.IAsyncResult OnBeginGetContactTypes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((ContactMaster.EnterpriseService.IContactService)(this)).BeginGetContactTypes(callback, asyncState);
        }
        
        private object[] OnEndGetContactTypes(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIContactType> retVal = ((ContactMaster.EnterpriseService.IContactService)(this)).EndGetContactTypes(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetContactTypesCompleted(object state) {
            if ((this.GetContactTypesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetContactTypesCompleted(this, new GetContactTypesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetContactTypesAsync() {
            this.GetContactTypesAsync(null);
        }
        
        public void GetContactTypesAsync(object userState) {
            if ((this.onBeginGetContactTypesDelegate == null)) {
                this.onBeginGetContactTypesDelegate = new BeginOperationDelegate(this.OnBeginGetContactTypes);
            }
            if ((this.onEndGetContactTypesDelegate == null)) {
                this.onEndGetContactTypesDelegate = new EndOperationDelegate(this.OnEndGetContactTypes);
            }
            if ((this.onGetContactTypesCompletedDelegate == null)) {
                this.onGetContactTypesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetContactTypesCompleted);
            }
            base.InvokeAsync(this.onBeginGetContactTypesDelegate, null, this.onEndGetContactTypesDelegate, this.onGetContactTypesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ContactMaster.EnterpriseService.IContactService.BeginGetContactDeparts(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetContactDeparts(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLITeam> ContactMaster.EnterpriseService.IContactService.EndGetContactDeparts(System.IAsyncResult result) {
            return base.Channel.EndGetContactDeparts(result);
        }
        
        private System.IAsyncResult OnBeginGetContactDeparts(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((ContactMaster.EnterpriseService.IContactService)(this)).BeginGetContactDeparts(callback, asyncState);
        }
        
        private object[] OnEndGetContactDeparts(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLITeam> retVal = ((ContactMaster.EnterpriseService.IContactService)(this)).EndGetContactDeparts(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetContactDepartsCompleted(object state) {
            if ((this.GetContactDepartsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetContactDepartsCompleted(this, new GetContactDepartsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetContactDepartsAsync() {
            this.GetContactDepartsAsync(null);
        }
        
        public void GetContactDepartsAsync(object userState) {
            if ((this.onBeginGetContactDepartsDelegate == null)) {
                this.onBeginGetContactDepartsDelegate = new BeginOperationDelegate(this.OnBeginGetContactDeparts);
            }
            if ((this.onEndGetContactDepartsDelegate == null)) {
                this.onEndGetContactDepartsDelegate = new EndOperationDelegate(this.OnEndGetContactDeparts);
            }
            if ((this.onGetContactDepartsCompletedDelegate == null)) {
                this.onGetContactDepartsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetContactDepartsCompleted);
            }
            base.InvokeAsync(this.onBeginGetContactDepartsDelegate, null, this.onEndGetContactDepartsDelegate, this.onGetContactDepartsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ContactMaster.EnterpriseService.IContactService.BeginGetContactView(int productid, int usertype, int catlog, int prodtypeid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetContactView(productid, usertype, catlog, prodtypeid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ContactMaster.EnterpriseService.USLIContactView ContactMaster.EnterpriseService.IContactService.EndGetContactView(System.IAsyncResult result) {
            return base.Channel.EndGetContactView(result);
        }
        
        private System.IAsyncResult OnBeginGetContactView(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int productid = ((int)(inValues[0]));
            int usertype = ((int)(inValues[1]));
            int catlog = ((int)(inValues[2]));
            int prodtypeid = ((int)(inValues[3]));
            return ((ContactMaster.EnterpriseService.IContactService)(this)).BeginGetContactView(productid, usertype, catlog, prodtypeid, callback, asyncState);
        }
        
        private object[] OnEndGetContactView(System.IAsyncResult result) {
            ContactMaster.EnterpriseService.USLIContactView retVal = ((ContactMaster.EnterpriseService.IContactService)(this)).EndGetContactView(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetContactViewCompleted(object state) {
            if ((this.GetContactViewCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetContactViewCompleted(this, new GetContactViewCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetContactViewAsync(int productid, int usertype, int catlog, int prodtypeid) {
            this.GetContactViewAsync(productid, usertype, catlog, prodtypeid, null);
        }
        
        public void GetContactViewAsync(int productid, int usertype, int catlog, int prodtypeid, object userState) {
            if ((this.onBeginGetContactViewDelegate == null)) {
                this.onBeginGetContactViewDelegate = new BeginOperationDelegate(this.OnBeginGetContactView);
            }
            if ((this.onEndGetContactViewDelegate == null)) {
                this.onEndGetContactViewDelegate = new EndOperationDelegate(this.OnEndGetContactView);
            }
            if ((this.onGetContactViewCompletedDelegate == null)) {
                this.onGetContactViewCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetContactViewCompleted);
            }
            base.InvokeAsync(this.onBeginGetContactViewDelegate, new object[] {
                        productid,
                        usertype,
                        catlog,
                        prodtypeid}, this.onEndGetContactViewDelegate, this.onGetContactViewCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ContactMaster.EnterpriseService.IContactService.BeginSaveDefaultContact(ContactMaster.EnterpriseService.USLIContactIDs contids, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveDefaultContact(contids, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool ContactMaster.EnterpriseService.IContactService.EndSaveDefaultContact(System.IAsyncResult result) {
            return base.Channel.EndSaveDefaultContact(result);
        }
        
        private System.IAsyncResult OnBeginSaveDefaultContact(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ContactMaster.EnterpriseService.USLIContactIDs contids = ((ContactMaster.EnterpriseService.USLIContactIDs)(inValues[0]));
            return ((ContactMaster.EnterpriseService.IContactService)(this)).BeginSaveDefaultContact(contids, callback, asyncState);
        }
        
        private object[] OnEndSaveDefaultContact(System.IAsyncResult result) {
            bool retVal = ((ContactMaster.EnterpriseService.IContactService)(this)).EndSaveDefaultContact(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveDefaultContactCompleted(object state) {
            if ((this.SaveDefaultContactCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveDefaultContactCompleted(this, new SaveDefaultContactCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveDefaultContactAsync(ContactMaster.EnterpriseService.USLIContactIDs contids) {
            this.SaveDefaultContactAsync(contids, null);
        }
        
        public void SaveDefaultContactAsync(ContactMaster.EnterpriseService.USLIContactIDs contids, object userState) {
            if ((this.onBeginSaveDefaultContactDelegate == null)) {
                this.onBeginSaveDefaultContactDelegate = new BeginOperationDelegate(this.OnBeginSaveDefaultContact);
            }
            if ((this.onEndSaveDefaultContactDelegate == null)) {
                this.onEndSaveDefaultContactDelegate = new EndOperationDelegate(this.OnEndSaveDefaultContact);
            }
            if ((this.onSaveDefaultContactCompletedDelegate == null)) {
                this.onSaveDefaultContactCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveDefaultContactCompleted);
            }
            base.InvokeAsync(this.onBeginSaveDefaultContactDelegate, new object[] {
                        contids}, this.onEndSaveDefaultContactDelegate, this.onSaveDefaultContactCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ContactMaster.EnterpriseService.IContactService.BeginDeleteDefaultContact(ContactMaster.EnterpriseService.USLIContactIDs contids, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteDefaultContact(contids, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool ContactMaster.EnterpriseService.IContactService.EndDeleteDefaultContact(System.IAsyncResult result) {
            return base.Channel.EndDeleteDefaultContact(result);
        }
        
        private System.IAsyncResult OnBeginDeleteDefaultContact(object[] inValues, System.AsyncCallback callback, object asyncState) {
            ContactMaster.EnterpriseService.USLIContactIDs contids = ((ContactMaster.EnterpriseService.USLIContactIDs)(inValues[0]));
            return ((ContactMaster.EnterpriseService.IContactService)(this)).BeginDeleteDefaultContact(contids, callback, asyncState);
        }
        
        private object[] OnEndDeleteDefaultContact(System.IAsyncResult result) {
            bool retVal = ((ContactMaster.EnterpriseService.IContactService)(this)).EndDeleteDefaultContact(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteDefaultContactCompleted(object state) {
            if ((this.DeleteDefaultContactCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteDefaultContactCompleted(this, new DeleteDefaultContactCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteDefaultContactAsync(ContactMaster.EnterpriseService.USLIContactIDs contids) {
            this.DeleteDefaultContactAsync(contids, null);
        }
        
        public void DeleteDefaultContactAsync(ContactMaster.EnterpriseService.USLIContactIDs contids, object userState) {
            if ((this.onBeginDeleteDefaultContactDelegate == null)) {
                this.onBeginDeleteDefaultContactDelegate = new BeginOperationDelegate(this.OnBeginDeleteDefaultContact);
            }
            if ((this.onEndDeleteDefaultContactDelegate == null)) {
                this.onEndDeleteDefaultContactDelegate = new EndOperationDelegate(this.OnEndDeleteDefaultContact);
            }
            if ((this.onDeleteDefaultContactCompletedDelegate == null)) {
                this.onDeleteDefaultContactCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteDefaultContactCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteDefaultContactDelegate, new object[] {
                        contids}, this.onEndDeleteDefaultContactDelegate, this.onDeleteDefaultContactCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ContactMaster.EnterpriseService.IContactService.BeginSaveAssignments(string ContactList, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveAssignments(ContactList, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void ContactMaster.EnterpriseService.IContactService.EndSaveAssignments(System.IAsyncResult result) {
            base.Channel.EndSaveAssignments(result);
        }
        
        private System.IAsyncResult OnBeginSaveAssignments(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string ContactList = ((string)(inValues[0]));
            return ((ContactMaster.EnterpriseService.IContactService)(this)).BeginSaveAssignments(ContactList, callback, asyncState);
        }
        
        private object[] OnEndSaveAssignments(System.IAsyncResult result) {
            ((ContactMaster.EnterpriseService.IContactService)(this)).EndSaveAssignments(result);
            return null;
        }
        
        private void OnSaveAssignmentsCompleted(object state) {
            if ((this.SaveAssignmentsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveAssignmentsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveAssignmentsAsync(string ContactList) {
            this.SaveAssignmentsAsync(ContactList, null);
        }
        
        public void SaveAssignmentsAsync(string ContactList, object userState) {
            if ((this.onBeginSaveAssignmentsDelegate == null)) {
                this.onBeginSaveAssignmentsDelegate = new BeginOperationDelegate(this.OnBeginSaveAssignments);
            }
            if ((this.onEndSaveAssignmentsDelegate == null)) {
                this.onEndSaveAssignmentsDelegate = new EndOperationDelegate(this.OnEndSaveAssignments);
            }
            if ((this.onSaveAssignmentsCompletedDelegate == null)) {
                this.onSaveAssignmentsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveAssignmentsCompleted);
            }
            base.InvokeAsync(this.onBeginSaveAssignmentsDelegate, new object[] {
                        ContactList}, this.onEndSaveAssignmentsDelegate, this.onSaveAssignmentsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ContactMaster.EnterpriseService.IContactService.BeginDeleteAssignments(string ContactList, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteAssignments(ContactList, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void ContactMaster.EnterpriseService.IContactService.EndDeleteAssignments(System.IAsyncResult result) {
            base.Channel.EndDeleteAssignments(result);
        }
        
        private System.IAsyncResult OnBeginDeleteAssignments(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string ContactList = ((string)(inValues[0]));
            return ((ContactMaster.EnterpriseService.IContactService)(this)).BeginDeleteAssignments(ContactList, callback, asyncState);
        }
        
        private object[] OnEndDeleteAssignments(System.IAsyncResult result) {
            ((ContactMaster.EnterpriseService.IContactService)(this)).EndDeleteAssignments(result);
            return null;
        }
        
        private void OnDeleteAssignmentsCompleted(object state) {
            if ((this.DeleteAssignmentsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteAssignmentsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteAssignmentsAsync(string ContactList) {
            this.DeleteAssignmentsAsync(ContactList, null);
        }
        
        public void DeleteAssignmentsAsync(string ContactList, object userState) {
            if ((this.onBeginDeleteAssignmentsDelegate == null)) {
                this.onBeginDeleteAssignmentsDelegate = new BeginOperationDelegate(this.OnBeginDeleteAssignments);
            }
            if ((this.onEndDeleteAssignmentsDelegate == null)) {
                this.onEndDeleteAssignmentsDelegate = new EndOperationDelegate(this.OnEndDeleteAssignments);
            }
            if ((this.onDeleteAssignmentsCompletedDelegate == null)) {
                this.onDeleteAssignmentsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteAssignmentsCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteAssignmentsDelegate, new object[] {
                        ContactList}, this.onEndDeleteAssignmentsDelegate, this.onDeleteAssignmentsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ContactMaster.EnterpriseService.IContactService.BeginDeleteContactAssignments(string ContactList, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteContactAssignments(ContactList, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void ContactMaster.EnterpriseService.IContactService.EndDeleteContactAssignments(System.IAsyncResult result) {
            base.Channel.EndDeleteContactAssignments(result);
        }
        
        private System.IAsyncResult OnBeginDeleteContactAssignments(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string ContactList = ((string)(inValues[0]));
            return ((ContactMaster.EnterpriseService.IContactService)(this)).BeginDeleteContactAssignments(ContactList, callback, asyncState);
        }
        
        private object[] OnEndDeleteContactAssignments(System.IAsyncResult result) {
            ((ContactMaster.EnterpriseService.IContactService)(this)).EndDeleteContactAssignments(result);
            return null;
        }
        
        private void OnDeleteContactAssignmentsCompleted(object state) {
            if ((this.DeleteContactAssignmentsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteContactAssignmentsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteContactAssignmentsAsync(string ContactList) {
            this.DeleteContactAssignmentsAsync(ContactList, null);
        }
        
        public void DeleteContactAssignmentsAsync(string ContactList, object userState) {
            if ((this.onBeginDeleteContactAssignmentsDelegate == null)) {
                this.onBeginDeleteContactAssignmentsDelegate = new BeginOperationDelegate(this.OnBeginDeleteContactAssignments);
            }
            if ((this.onEndDeleteContactAssignmentsDelegate == null)) {
                this.onEndDeleteContactAssignmentsDelegate = new EndOperationDelegate(this.OnEndDeleteContactAssignments);
            }
            if ((this.onDeleteContactAssignmentsCompletedDelegate == null)) {
                this.onDeleteContactAssignmentsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteContactAssignmentsCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteContactAssignmentsDelegate, new object[] {
                        ContactList}, this.onEndDeleteContactAssignmentsDelegate, this.onDeleteContactAssignmentsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ContactMaster.EnterpriseService.IContactService.BeginGetContactMainPikerView(int catlogid, int tmid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetContactMainPikerView(catlogid, tmid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ContactMaster.EnterpriseService.USLIContactMainPikerView ContactMaster.EnterpriseService.IContactService.EndGetContactMainPikerView(System.IAsyncResult result) {
            return base.Channel.EndGetContactMainPikerView(result);
        }
        
        private System.IAsyncResult OnBeginGetContactMainPikerView(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int catlogid = ((int)(inValues[0]));
            int tmid = ((int)(inValues[1]));
            return ((ContactMaster.EnterpriseService.IContactService)(this)).BeginGetContactMainPikerView(catlogid, tmid, callback, asyncState);
        }
        
        private object[] OnEndGetContactMainPikerView(System.IAsyncResult result) {
            ContactMaster.EnterpriseService.USLIContactMainPikerView retVal = ((ContactMaster.EnterpriseService.IContactService)(this)).EndGetContactMainPikerView(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetContactMainPikerViewCompleted(object state) {
            if ((this.GetContactMainPikerViewCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetContactMainPikerViewCompleted(this, new GetContactMainPikerViewCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetContactMainPikerViewAsync(int catlogid, int tmid) {
            this.GetContactMainPikerViewAsync(catlogid, tmid, null);
        }
        
        public void GetContactMainPikerViewAsync(int catlogid, int tmid, object userState) {
            if ((this.onBeginGetContactMainPikerViewDelegate == null)) {
                this.onBeginGetContactMainPikerViewDelegate = new BeginOperationDelegate(this.OnBeginGetContactMainPikerView);
            }
            if ((this.onEndGetContactMainPikerViewDelegate == null)) {
                this.onEndGetContactMainPikerViewDelegate = new EndOperationDelegate(this.OnEndGetContactMainPikerView);
            }
            if ((this.onGetContactMainPikerViewCompletedDelegate == null)) {
                this.onGetContactMainPikerViewCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetContactMainPikerViewCompleted);
            }
            base.InvokeAsync(this.onBeginGetContactMainPikerViewDelegate, new object[] {
                        catlogid,
                        tmid}, this.onEndGetContactMainPikerViewDelegate, this.onGetContactMainPikerViewCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ContactMaster.EnterpriseService.IContactService.BeginGetContactDetailView(int userid, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetContactDetailView(userid, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ContactMaster.EnterpriseService.USLIContactAsignmentDetailView ContactMaster.EnterpriseService.IContactService.EndGetContactDetailView(System.IAsyncResult result) {
            return base.Channel.EndGetContactDetailView(result);
        }
        
        private System.IAsyncResult OnBeginGetContactDetailView(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int userid = ((int)(inValues[0]));
            return ((ContactMaster.EnterpriseService.IContactService)(this)).BeginGetContactDetailView(userid, callback, asyncState);
        }
        
        private object[] OnEndGetContactDetailView(System.IAsyncResult result) {
            ContactMaster.EnterpriseService.USLIContactAsignmentDetailView retVal = ((ContactMaster.EnterpriseService.IContactService)(this)).EndGetContactDetailView(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetContactDetailViewCompleted(object state) {
            if ((this.GetContactDetailViewCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetContactDetailViewCompleted(this, new GetContactDetailViewCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetContactDetailViewAsync(int userid) {
            this.GetContactDetailViewAsync(userid, null);
        }
        
        public void GetContactDetailViewAsync(int userid, object userState) {
            if ((this.onBeginGetContactDetailViewDelegate == null)) {
                this.onBeginGetContactDetailViewDelegate = new BeginOperationDelegate(this.OnBeginGetContactDetailView);
            }
            if ((this.onEndGetContactDetailViewDelegate == null)) {
                this.onEndGetContactDetailViewDelegate = new EndOperationDelegate(this.OnEndGetContactDetailView);
            }
            if ((this.onGetContactDetailViewCompletedDelegate == null)) {
                this.onGetContactDetailViewCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetContactDetailViewCompleted);
            }
            base.InvokeAsync(this.onBeginGetContactDetailViewDelegate, new object[] {
                        userid}, this.onEndGetContactDetailViewDelegate, this.onGetContactDetailViewCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ContactMaster.EnterpriseService.IContactService.BeginReplaceContactAssignments(int source, int target, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReplaceContactAssignments(source, target, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void ContactMaster.EnterpriseService.IContactService.EndReplaceContactAssignments(System.IAsyncResult result) {
            base.Channel.EndReplaceContactAssignments(result);
        }
        
        private System.IAsyncResult OnBeginReplaceContactAssignments(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int source = ((int)(inValues[0]));
            int target = ((int)(inValues[1]));
            return ((ContactMaster.EnterpriseService.IContactService)(this)).BeginReplaceContactAssignments(source, target, callback, asyncState);
        }
        
        private object[] OnEndReplaceContactAssignments(System.IAsyncResult result) {
            ((ContactMaster.EnterpriseService.IContactService)(this)).EndReplaceContactAssignments(result);
            return null;
        }
        
        private void OnReplaceContactAssignmentsCompleted(object state) {
            if ((this.ReplaceContactAssignmentsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReplaceContactAssignmentsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReplaceContactAssignmentsAsync(int source, int target) {
            this.ReplaceContactAssignmentsAsync(source, target, null);
        }
        
        public void ReplaceContactAssignmentsAsync(int source, int target, object userState) {
            if ((this.onBeginReplaceContactAssignmentsDelegate == null)) {
                this.onBeginReplaceContactAssignmentsDelegate = new BeginOperationDelegate(this.OnBeginReplaceContactAssignments);
            }
            if ((this.onEndReplaceContactAssignmentsDelegate == null)) {
                this.onEndReplaceContactAssignmentsDelegate = new EndOperationDelegate(this.OnEndReplaceContactAssignments);
            }
            if ((this.onReplaceContactAssignmentsCompletedDelegate == null)) {
                this.onReplaceContactAssignmentsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReplaceContactAssignmentsCompleted);
            }
            base.InvokeAsync(this.onBeginReplaceContactAssignmentsDelegate, new object[] {
                        source,
                        target}, this.onEndReplaceContactAssignmentsDelegate, this.onReplaceContactAssignmentsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult ContactMaster.EnterpriseService.IContactService.BeginGetProducts(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetProducts(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLITeam> ContactMaster.EnterpriseService.IContactService.EndGetProducts(System.IAsyncResult result) {
            return base.Channel.EndGetProducts(result);
        }
        
        private System.IAsyncResult OnBeginGetProducts(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((ContactMaster.EnterpriseService.IContactService)(this)).BeginGetProducts(callback, asyncState);
        }
        
        private object[] OnEndGetProducts(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLITeam> retVal = ((ContactMaster.EnterpriseService.IContactService)(this)).EndGetProducts(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetProductsCompleted(object state) {
            if ((this.GetProductsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetProductsCompleted(this, new GetProductsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetProductsAsync() {
            this.GetProductsAsync(null);
        }
        
        public void GetProductsAsync(object userState) {
            if ((this.onBeginGetProductsDelegate == null)) {
                this.onBeginGetProductsDelegate = new BeginOperationDelegate(this.OnBeginGetProducts);
            }
            if ((this.onEndGetProductsDelegate == null)) {
                this.onEndGetProductsDelegate = new EndOperationDelegate(this.OnEndGetProducts);
            }
            if ((this.onGetProductsCompletedDelegate == null)) {
                this.onGetProductsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetProductsCompleted);
            }
            base.InvokeAsync(this.onBeginGetProductsDelegate, null, this.onEndGetProductsDelegate, this.onGetProductsCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override ContactMaster.EnterpriseService.IContactService CreateChannel() {
            return new ContactServiceClientChannel(this);
        }
        
        private class ContactServiceClientChannel : ChannelBase<ContactMaster.EnterpriseService.IContactService>, ContactMaster.EnterpriseService.IContactService {
            
            public ContactServiceClientChannel(System.ServiceModel.ClientBase<ContactMaster.EnterpriseService.IContactService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginAddStaffToTeam(int teamId, int staffId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = teamId;
                _args[1] = staffId;
                System.IAsyncResult _result = base.BeginInvoke("AddStaffToTeam", _args, callback, asyncState);
                return _result;
            }
            
            public void EndAddStaffToTeam(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("AddStaffToTeam", _args, result);
            }
            
            public System.IAsyncResult BeginCreateExcelReport(string columndata, System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIContactAsignment> astList, int catlog, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = columndata;
                _args[1] = astList;
                _args[2] = catlog;
                System.IAsyncResult _result = base.BeginInvoke("CreateExcelReport", _args, callback, asyncState);
                return _result;
            }
            
            public string EndCreateExcelReport(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("CreateExcelReport", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginExcelReport(string columndata, int iDeptid, int iUserType, int icatlog, int iProdType, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[5];
                _args[0] = columndata;
                _args[1] = iDeptid;
                _args[2] = iUserType;
                _args[3] = icatlog;
                _args[4] = iProdType;
                System.IAsyncResult _result = base.BeginInvoke("ExcelReport", _args, callback, asyncState);
                return _result;
            }
            
            public string EndExcelReport(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("ExcelReport", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddWebStaffToTeam(int teamId, int staffId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = teamId;
                _args[1] = staffId;
                System.IAsyncResult _result = base.BeginInvoke("AddWebStaffToTeam", _args, callback, asyncState);
                return _result;
            }
            
            public void EndAddWebStaffToTeam(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("AddWebStaffToTeam", _args, result);
            }
            
            public System.IAsyncResult BeginDeleteSchool(int edId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = edId;
                System.IAsyncResult _result = base.BeginInvoke("DeleteSchool", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDeleteSchool(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DeleteSchool", _args, result);
            }
            
            public System.IAsyncResult BeginDeleteStaffFromTeam(int teamId, int staffId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = teamId;
                _args[1] = staffId;
                System.IAsyncResult _result = base.BeginInvoke("DeleteStaffFromTeam", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDeleteStaffFromTeam(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DeleteStaffFromTeam", _args, result);
            }
            
            public System.IAsyncResult BeginDeleteUserFifties(int userid, int agentid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = userid;
                _args[1] = agentid;
                System.IAsyncResult _result = base.BeginInvoke("DeleteUserFifties", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDeleteUserFifties(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DeleteUserFifties", _args, result);
            }
            
            public System.IAsyncResult BeginDeleteUSLICert(int id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("DeleteUSLICert", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDeleteUSLICert(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DeleteUSLICert", _args, result);
            }
            
            public System.IAsyncResult BeginDeleteUSLITitle(int id, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = id;
                System.IAsyncResult _result = base.BeginInvoke("DeleteUSLITitle", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDeleteUSLITitle(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DeleteUSLITitle", _args, result);
            }
            
            public System.IAsyncResult BeginDeleteWebStaffFromTeam(int teamId, int staffId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = teamId;
                _args[1] = staffId;
                System.IAsyncResult _result = base.BeginInvoke("DeleteWebStaffFromTeam", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDeleteWebStaffFromTeam(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DeleteWebStaffFromTeam", _args, result);
            }
            
            public System.IAsyncResult BeginGetCerts(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetCerts", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLICertification> EndGetCerts(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLICertification> _result = ((System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLICertification>)(base.EndInvoke("GetCerts", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetEducationType(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetEducationType", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.GenericEntity> EndGetEducationType(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.GenericEntity> _result = ((System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.GenericEntity>)(base.EndInvoke("GetEducationType", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetRooms(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetRooms", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.Conferenceroom> EndGetRooms(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.Conferenceroom> _result = ((System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.Conferenceroom>)(base.EndInvoke("GetRooms", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetSchools(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetSchools", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIEducation> EndGetSchools(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIEducation> _result = ((System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIEducation>)(base.EndInvoke("GetSchools", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetStaffAdditions(int staffId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = staffId;
                System.IAsyncResult _result = base.BeginInvoke("GetStaffAdditions", _args, callback, asyncState);
                return _result;
            }
            
            public ContactMaster.EnterpriseService.USLIUserAddition EndGetStaffAdditions(System.IAsyncResult result) {
                object[] _args = new object[0];
                ContactMaster.EnterpriseService.USLIUserAddition _result = ((ContactMaster.EnterpriseService.USLIUserAddition)(base.EndInvoke("GetStaffAdditions", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetStates(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetStates", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USState> EndGetStates(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USState> _result = ((System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USState>)(base.EndInvoke("GetStates", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetTeams(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetTeams", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLITeam> EndGetTeams(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLITeam> _result = ((System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLITeam>)(base.EndInvoke("GetTeams", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetTeamStaffs(int teamId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = teamId;
                System.IAsyncResult _result = base.BeginInvoke("GetTeamStaffs", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIUser> EndGetTeamStaffs(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIUser> _result = ((System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIUser>)(base.EndInvoke("GetTeamStaffs", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetTitles(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetTitles", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLITitle> EndGetTitles(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLITitle> _result = ((System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLITitle>)(base.EndInvoke("GetTitles", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetUser(int userID, int workstationid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = userID;
                _args[1] = workstationid;
                System.IAsyncResult _result = base.BeginInvoke("GetUser", _args, callback, asyncState);
                return _result;
            }
            
            public ContactMaster.EnterpriseService.USLIUser EndGetUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                ContactMaster.EnterpriseService.USLIUser _result = ((ContactMaster.EnterpriseService.USLIUser)(base.EndInvoke("GetUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetUserFifties(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetUserFifties", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.User50> EndGetUserFifties(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.User50> _result = ((System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.User50>)(base.EndInvoke("GetUserFifties", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetUserFiftyPickerView(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetUserFiftyPickerView", _args, callback, asyncState);
                return _result;
            }
            
            public ContactMaster.EnterpriseService.Customer50ViewModel EndGetUserFiftyPickerView(System.IAsyncResult result) {
                object[] _args = new object[0];
                ContactMaster.EnterpriseService.Customer50ViewModel _result = ((ContactMaster.EnterpriseService.Customer50ViewModel)(base.EndInvoke("GetUserFiftyPickerView", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetUsers(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetUsers", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIUsers> EndGetUsers(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIUsers> _result = ((System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIUsers>)(base.EndInvoke("GetUsers", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetWebRegionalContact(int userID, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userID;
                System.IAsyncResult _result = base.BeginInvoke("GetWebRegionalContact", _args, callback, asyncState);
                return _result;
            }
            
            public ContactMaster.EnterpriseService.USLIUser EndGetWebRegionalContact(System.IAsyncResult result) {
                object[] _args = new object[0];
                ContactMaster.EnterpriseService.USLIUser _result = ((ContactMaster.EnterpriseService.USLIUser)(base.EndInvoke("GetWebRegionalContact", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetWebRegionalContacts(int teamId, string statecode, int isUA, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = teamId;
                _args[1] = statecode;
                _args[2] = isUA;
                System.IAsyncResult _result = base.BeginInvoke("GetWebRegionalContacts", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIUser> EndGetWebRegionalContacts(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIUser> _result = ((System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIUser>)(base.EndInvoke("GetWebRegionalContacts", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetWebRegionalTeams(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetWebRegionalTeams", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLITeam> EndGetWebRegionalTeams(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLITeam> _result = ((System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLITeam>)(base.EndInvoke("GetWebRegionalTeams", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetWebTeams(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetWebTeams", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLITeam> EndGetWebTeams(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLITeam> _result = ((System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLITeam>)(base.EndInvoke("GetWebTeams", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetWebTeamStaffs(int teamId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = teamId;
                System.IAsyncResult _result = base.BeginInvoke("GetWebTeamStaffs", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIUser> EndGetWebTeamStaffs(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIUser> _result = ((System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIUser>)(base.EndInvoke("GetWebTeamStaffs", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveStaff(ContactMaster.EnterpriseService.USLIUser staff, ContactMaster.EnterpriseService.USLIUserAddition stfAdition, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = staff;
                _args[1] = stfAdition;
                System.IAsyncResult _result = base.BeginInvoke("SaveStaff", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSaveStaff(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SaveStaff", _args, result);
            }
            
            public System.IAsyncResult BeginSaveUserFifties(ContactMaster.EnterpriseService.User50 user, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = user;
                System.IAsyncResult _result = base.BeginInvoke("SaveUserFifties", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSaveUserFifties(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SaveUserFifties", _args, result);
            }
            
            public System.IAsyncResult BeginSaveUSLICert(int id, string name, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = id;
                _args[1] = name;
                System.IAsyncResult _result = base.BeginInvoke("SaveUSLICert", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSaveUSLICert(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SaveUSLICert", _args, result);
            }
            
            public System.IAsyncResult BeginSaveUSLIEducation(ContactMaster.EnterpriseService.USLIEducation ed, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ed;
                System.IAsyncResult _result = base.BeginInvoke("SaveUSLIEducation", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSaveUSLIEducation(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SaveUSLIEducation", _args, result);
            }
            
            public System.IAsyncResult BeginSaveUSLITitle(int id, string name, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = id;
                _args[1] = name;
                System.IAsyncResult _result = base.BeginInvoke("SaveUSLITitle", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSaveUSLITitle(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SaveUSLITitle", _args, result);
            }
            
            public System.IAsyncResult BeginSaveWebRegionalContact(int DeptID, string state, string ListSelected, string isUA, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = DeptID;
                _args[1] = state;
                _args[2] = ListSelected;
                _args[3] = isUA;
                System.IAsyncResult _result = base.BeginInvoke("SaveWebRegionalContact", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndSaveWebRegionalContact(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("SaveWebRegionalContact", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSearchUsers(string search, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = search;
                System.IAsyncResult _result = base.BeginInvoke("SearchUsers", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIUsers> EndSearchUsers(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIUsers> _result = ((System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIUsers>)(base.EndInvoke("SearchUsers", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetContactTypes(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetContactTypes", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIContactType> EndGetContactTypes(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIContactType> _result = ((System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLIContactType>)(base.EndInvoke("GetContactTypes", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetContactDeparts(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetContactDeparts", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLITeam> EndGetContactDeparts(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLITeam> _result = ((System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLITeam>)(base.EndInvoke("GetContactDeparts", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetContactView(int productid, int usertype, int catlog, int prodtypeid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[4];
                _args[0] = productid;
                _args[1] = usertype;
                _args[2] = catlog;
                _args[3] = prodtypeid;
                System.IAsyncResult _result = base.BeginInvoke("GetContactView", _args, callback, asyncState);
                return _result;
            }
            
            public ContactMaster.EnterpriseService.USLIContactView EndGetContactView(System.IAsyncResult result) {
                object[] _args = new object[0];
                ContactMaster.EnterpriseService.USLIContactView _result = ((ContactMaster.EnterpriseService.USLIContactView)(base.EndInvoke("GetContactView", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveDefaultContact(ContactMaster.EnterpriseService.USLIContactIDs contids, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = contids;
                System.IAsyncResult _result = base.BeginInvoke("SaveDefaultContact", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndSaveDefaultContact(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("SaveDefaultContact", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDeleteDefaultContact(ContactMaster.EnterpriseService.USLIContactIDs contids, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = contids;
                System.IAsyncResult _result = base.BeginInvoke("DeleteDefaultContact", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndDeleteDefaultContact(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("DeleteDefaultContact", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveAssignments(string ContactList, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ContactList;
                System.IAsyncResult _result = base.BeginInvoke("SaveAssignments", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSaveAssignments(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SaveAssignments", _args, result);
            }
            
            public System.IAsyncResult BeginDeleteAssignments(string ContactList, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ContactList;
                System.IAsyncResult _result = base.BeginInvoke("DeleteAssignments", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDeleteAssignments(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DeleteAssignments", _args, result);
            }
            
            public System.IAsyncResult BeginDeleteContactAssignments(string ContactList, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ContactList;
                System.IAsyncResult _result = base.BeginInvoke("DeleteContactAssignments", _args, callback, asyncState);
                return _result;
            }
            
            public void EndDeleteContactAssignments(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("DeleteContactAssignments", _args, result);
            }
            
            public System.IAsyncResult BeginGetContactMainPikerView(int catlogid, int tmid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = catlogid;
                _args[1] = tmid;
                System.IAsyncResult _result = base.BeginInvoke("GetContactMainPikerView", _args, callback, asyncState);
                return _result;
            }
            
            public ContactMaster.EnterpriseService.USLIContactMainPikerView EndGetContactMainPikerView(System.IAsyncResult result) {
                object[] _args = new object[0];
                ContactMaster.EnterpriseService.USLIContactMainPikerView _result = ((ContactMaster.EnterpriseService.USLIContactMainPikerView)(base.EndInvoke("GetContactMainPikerView", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetContactDetailView(int userid, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userid;
                System.IAsyncResult _result = base.BeginInvoke("GetContactDetailView", _args, callback, asyncState);
                return _result;
            }
            
            public ContactMaster.EnterpriseService.USLIContactAsignmentDetailView EndGetContactDetailView(System.IAsyncResult result) {
                object[] _args = new object[0];
                ContactMaster.EnterpriseService.USLIContactAsignmentDetailView _result = ((ContactMaster.EnterpriseService.USLIContactAsignmentDetailView)(base.EndInvoke("GetContactDetailView", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginReplaceContactAssignments(int source, int target, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = source;
                _args[1] = target;
                System.IAsyncResult _result = base.BeginInvoke("ReplaceContactAssignments", _args, callback, asyncState);
                return _result;
            }
            
            public void EndReplaceContactAssignments(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("ReplaceContactAssignments", _args, result);
            }
            
            public System.IAsyncResult BeginGetProducts(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetProducts", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLITeam> EndGetProducts(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLITeam> _result = ((System.Collections.ObjectModel.ObservableCollection<ContactMaster.EnterpriseService.USLITeam>)(base.EndInvoke("GetProducts", _args, result)));
                return _result;
            }
        }
    }
}
